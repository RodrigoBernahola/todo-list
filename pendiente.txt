Agregar los archivos de configuración de Webpack.
Agregar scripts.
Terminar el maquetado.
Plantear objetos (con sus atributos y métodos) y elementos a agregar. Posibilidad de plantear un diagrama de clases.
Agregar la posibilidad de guardar localmente proyectos y tareas.
Agregar la librería que se encarga de las fechas.

Your ‘todos’ are going to be objects that you’ll want to dynamically create, which means either using factories or constructors/classes to generate them.
Brainstorm what kind of properties your todo-items are going to have. At a minimum they should have a title, description, dueDate and priority. You might also want to include notes or even a checklist.

-->Básicame cada "todo" es una pequeña tarea que el usuario querrá realizar en algún momento determinado. Estas tareas deben ser creadas dinámicamente usando objetos, es decir, pueden ser instancias de clases.
Las propiedades que debe tener cada instancia son las que se sugieren
en el proyecto.


Your todo list should have projects or separate lists of todos. When a user first opens the app, there should be some sort of ‘default’ project to which all of their todos are put. Users should be able to create new projects and choose which project their todos go into.

--> Con esto lo que puedo hacer para implementarlo es crear un proyecto, o lista de tareas, que sea "Sin asignar" y que contenga las tareas que no pertenecen a un proyecto específico todavía.

The look of the User Interface is up to you, but it should be able to do the following:
View all projects.
View all todos in each project (probably just the title and duedate… perhaps changing color for different priorities).
Expand a single todo to see/edit its details.
Delete a todo.
For inspiration, check out the following great todo apps. (look at screenshots, watch their introduction videos etc.)
Todoist
Things
any.do

--> Guiarme con el diseño de Figma pero ir modificándolo si hace falta.
En total serían 3 archivos cada uno conteniendo la sección que corresponda. (Landing, Projects list, Project).


El error `Uncaught TypeError: Cannot read properties of null (reading 'appendChild')` ocurre porque el código está intentando acceder a un elemento del DOM que no existe en el momento en que se ejecuta el script. En este caso, el problema está en la línea donde intentas usar `appendChild` en un elemento que no fue encontrado (`null`).

Esto sucede porque el script intenta seleccionar el elemento `<div id="app">` antes de que el DOM haya terminado de cargarse.

--> Se solucionó al agregar en el archivo webpack.common.js la clave/valor de template: 'archivotemplate.html'. Después
tuve que cerrar el servidor y levantarlo nuevamente para que funcione.

