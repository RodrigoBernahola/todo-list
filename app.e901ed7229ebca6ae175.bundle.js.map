{"version":3,"file":"app.e901ed7229ebca6ae175.bundle.js","mappings":"mBAAA,MAAMA,EAEF,WAAAC,CAAYC,EAAOC,EAAaC,EAASC,EAAUC,GAC/CC,KAAKL,MAAQA,EACbK,KAAKJ,YAAcA,EACnBI,KAAKH,QAAUA,EACfG,KAAKF,SAAWA,EAChBE,KAAKD,UAAYA,CACrB,CAEA,oBAAAE,GAYI,OAVKD,KAAKD,UAONC,KAAKD,WAAY,EALjBC,KAAKD,WAAY,EAQdC,KAAKD,SAChB,CAEA,QAAAG,CAASC,GAOL,OALAH,KAAKL,MAAQQ,EAAQR,MACrBK,KAAKJ,YAAcO,EAAQP,YAC3BI,KAAKH,QAAUM,EAAQN,QACvBG,KAAKF,SAAWK,EAAQL,SAEjBE,IAEX,EC/BJ,MAAMI,EAIF,WAAAV,CAAYW,EAAMC,GACdN,KAAKK,KAAOA,EACZL,KAAKM,UAAYA,CACrB,CAGA,OAAAC,CAAQC,GAEJ,IAAIC,EAAOC,KAAKC,OAAOC,aAEvB,MAAMC,EAAU,IAAIpB,EAAKe,EAASb,MAAOa,EAASZ,YAAaY,EAASX,QAASW,EAASV,SAAUU,EAASM,aAM7G,OAJAD,EAAQE,GAAKN,EAEbT,KAAKM,UAAUU,KAAKH,GAEbA,CAEX,CAGA,UAAAI,CAAWC,GAIP,IAAIC,EAAoBnB,KAAKM,UAAUc,WAAYC,GAASA,EAAKN,KAAOG,IAExElB,KAAKM,UAAUgB,OAAOH,EAAmB,EAE7C,CAGA,YAAAI,CAAaL,GAOT,OALmBlB,KAAKM,UAAUkB,MAAOH,GACzCA,EAAKN,KAAOG,IAEoBjB,sBAIpC,CAGA,QAAAC,CAASuB,EAAcP,GAMnB,OAJmBlB,KAAKM,UAAUkB,MAAOH,GAASA,EAAKN,KAAOG,IAEvChB,SAASuB,EAIpC,EC3DJ,MAAMC,EAEF,WAAAhC,GAEIM,KAAK2B,aAAe,kBACxB,CAEA,YAAAC,CAAaC,GACT,IAEI,MAAMC,EAAeC,KAAKC,UAAUH,GAGpCI,aAAaC,QAAQlC,KAAK2B,aAAcG,GAExCK,QAAQC,IAAI,oDAChB,CAAE,MAAOC,GACLF,QAAQE,MAAM,8BAA+BA,EACjD,CACJ,CAGA,YAAAC,GACI,IAEI,MAAMR,EAAeG,aAAaM,QAAQvC,KAAK2B,cAG/C,IAAKG,EAED,OADAK,QAAQC,IAAI,+CACL,GAIX,MAAMP,EAAWE,KAAKS,MAAMV,GAG5B,OADAK,QAAQC,IAAI,0CAA2CP,GAChDA,CAEX,CAAE,MAAOQ,GAEL,OADAF,QAAQE,MAAM,6BAA8BA,GACrC,EACX,CACJ,CAGA,aAAAI,GACI,IACIR,aAAaS,WAAW1C,KAAK2B,cAC7BQ,QAAQC,IAAI,wCAChB,CAAE,MAAOC,GACLF,QAAQE,MAAM,+BAAgCA,EAClD,CACJ,CAGA,iBAAAM,GAEI,OAAOb,MADcG,aAAaM,QAAQvC,KAAK2B,aAEnD,CAGA,cAAAiB,GACI,IACI,MAAMd,EAAeG,aAAaM,QAAQvC,KAAK2B,cAE/C,MAAO,CACHkB,QAA0B,OAAjBf,EACTgB,SAAUhB,EAAeA,EAAaiB,OAAS,EAC/CC,aAAclB,EAAeC,KAAKS,MAAMV,GAAciB,OAAS,EAEvE,CAAE,MAAOV,GAEL,OADAF,QAAQE,MAAM,4CAA6CA,GACpD,CACHQ,SAAS,EACTC,SAAU,EACVE,aAAc,EAEtB,CACJ,EC/EG,SAASC,EAAgBC,GAE5B,MAAMC,EAAaC,SAASC,cAAc,OAC1CF,EAAWG,UAAUC,IAAI,WACzBJ,EAAWK,aAAa,aAAcN,EAAQnC,IAE9C,MAAM0C,EAAcL,SAASC,cAAc,MAC3CI,EAAYC,YAAcR,EAAQ7C,KAElC,MAAMsD,EAAiBP,SAASC,cAAc,OAC9CM,EAAeL,UAAUC,IAAI,kBAE7B,MAAMK,EAASR,SAASC,cAAc,UAQtC,OAPAO,EAAOF,YAAc,YACrBE,EAAON,UAAUC,IAAI,YAErBJ,EAAWU,YAAYJ,GACvBN,EAAWU,YAAYD,GACvBT,EAAWU,YAAYF,GAEhBR,CAEX,CCpBO,SAASW,EAAkBtD,EAAUU,GAGxC,MAAM6C,EAAUX,SAASC,cAAc,OACvCU,EAAQC,UAAY,gBACpBD,EAAQP,aAAa,UAAWtC,GAGH,OAAzBV,EAASM,aACTiD,EAAQT,UAAUC,IAAI,aAI1B,MAAM5D,EAAQyD,SAASC,cAAc,MACrC1D,EAAM+D,YAAclD,EAASb,MAC7BA,EAAMqE,UAAY,aAElB,MAAMpE,EAAcwD,SAASC,cAAc,KAC3CzD,EAAY8D,YAAclD,EAASZ,YACnCA,EAAYoE,UAAY,mBAExB,MAAMnE,EAAUuD,SAASC,cAAc,KACvCxD,EAAQ6D,YAAc,QCvBnB,SAAoBO,GAEvB,IAAKA,EAAY,MAAO,UAExB,IACI,MAAMC,EAAO,IAAIC,KAAKF,GACtB,OAAIG,MAAMF,EAAKG,WAAmBJ,EAE3BC,EAAKI,mBAAmB,QAAS,CACpCC,KAAM,UACNC,MAAO,UACPC,IAAK,WAEb,CAAE,MAAOC,GACL,OAAOT,CACX,CAEJ,CDMkCU,CAAWnE,EAASX,WAClDA,EAAQmE,UAAY,YAEpB,MAAMlE,EAAWsD,SAASC,cAAc,KACxCvD,EAAS4D,YAAc,aAAalD,EAASV,WAC7CA,EAASkE,UAAY,gBACrBlE,EAAS8E,QAAQ9E,SAAWU,EAASV,SAAS+E,cAE9C,MAAMC,EAAS1B,SAASC,cAAc,KAEtC,IAAI0B,EAAsC,OAAzBvE,EAASM,YAAuB,MAAQ,KACzDgE,EAAOpB,YAAc,cAAcqB,IACnCD,EAAOd,UAAY,cACnBc,EAAOF,QAAQI,UAAYxE,EAASM,YAIpC,MAAMmE,EAAa7B,SAASC,cAAc,OAC1C4B,EAAWjB,UAAY,eAGvB,MAAMkB,EAAY9B,SAASC,cAAc,UACzC6B,EAAUxB,YAAc,eACxBwB,EAAUlB,UAAY,cAEtB,MAAMmB,EAAc/B,SAASC,cAAc,UAC3C8B,EAAYzB,YAAc,YAC1ByB,EAAYnB,UAAY,gBAExB,MAAMoB,EAAUhC,SAASC,cAAc,UAsBvC,OArBA+B,EAAQ1B,YAAc,aACtB0B,EAAQpB,UAAY,YAGpBiB,EAAWpB,YAAYqB,GACvBD,EAAWpB,YAAYsB,GACvBF,EAAWpB,YAAYuB,GAGvBrB,EAAQF,YAAYlE,GACpBoE,EAAQF,YAAYjE,GACpBmE,EAAQF,YAAYhE,GACpBkE,EAAQF,YAAY/D,GACpBiE,EAAQF,YAAYiB,GACpBf,EAAQF,YAAYoB,GAGpBI,YAAW,KACPtB,EAAQT,UAAUgC,OAAO,MAAM,GAChC,KAEIvB,CAEX,CEvEA,MAAMwB,EAEF,WAAA7F,CAAYmC,GACR7B,KAAK6B,SAAWA,EAEhB7B,KAAKwF,eAAiB,IAAI9D,CAC9B,CAEA,UAAA+D,CAAWC,GAKP,GAHA1F,KAAK2F,wBAAwBD,GAGA,IAAzB1F,KAAK6B,SAASkB,OAAc,CAE5B,MAAM6C,EAAe3C,EADAjD,KAAK6F,cAAc,oBAExCH,EAAc7B,YAAY+B,EAC9B,CACJ,CAGA,uBAAAD,CAAwBD,GACpB,IAEI,MAAMI,EAAqB9F,KAAKwF,eAAelD,eAG/CwD,EAAmBC,SAAQC,IAEvB,MAAM9C,EAAU,IAAI9C,EAAQ4F,EAAY3F,KAAM,IAC9C6C,EAAQnC,GAAKiF,EAAYjF,GAGrBiF,EAAY1F,WAAa0F,EAAY1F,UAAUyC,OAAS,GACxDiD,EAAY1F,UAAUyF,SAAQvF,IAE1B,MAAMa,EAAO,IAAI5B,EACbe,EAASb,MACTa,EAASZ,YACTY,EAASX,QACTW,EAASV,SACTU,EAAST,WAEbsB,EAAKN,GAAKP,EAASO,GAGnBmC,EAAQ5C,UAAUU,KAAKK,EAAK,IAKpCrB,KAAK6B,SAASb,KAAKkC,GAGnB,MAAM+C,EAAYhD,EAAgBC,GAClCwC,EAAc7B,YAAYoC,GAG1B,MAAMtC,EAAiBsC,EAAUC,cAAc,mBAC/ChD,EAAQ5C,UAAUyF,SAAQ1E,IACtB,MAAM8E,EAAcrC,EAAkBzC,EAAMA,EAAKN,IACjD4C,EAAeE,YAAYsC,EAAY,GACzC,IAGNhE,QAAQC,IAAI,YAAY0D,EAAmB/C,uCAE/C,CAAE,MAAOV,GACLF,QAAQE,MAAM,iDAAkDA,EACpE,CACJ,CAGA,qBAAA+D,GACI,IACIpG,KAAKwF,eAAe5D,aAAa5B,KAAK6B,SAC1C,CAAE,MAAOQ,GACLF,QAAQE,MAAM,8BAA+BA,EACjD,CACJ,CAEA,aAAAwD,CAAcpC,GAGV,GADwBzD,KAAK6B,SAASL,MAAK0B,GAAWA,EAAQ7C,OAASoD,IAGnE,OADAtB,QAAQkE,KAAK,wCAAwC5C,KAC9C,KAGX,MAAM6C,EAAa,IAAIlG,EAAQqD,EAAa,IAC5C,IAAI8C,EAAc7F,KAAKC,OAAOC,aAQ9B,OAPA0F,EAAWvF,GAAKwF,EAEhBvG,KAAK6B,SAASb,KAAKsF,GAGnBtG,KAAKoG,wBAEEE,CACX,CAGA,OAAA/F,CAAQC,EAAUgG,GACd,IAAIC,EAAkBzG,KAAK6B,SAASL,MAAK0B,GAAWA,EAAQnC,KAAOyF,IAEnE,IAAKC,EAED,OADAtE,QAAQE,MAAM,sCAAsCmE,KAC7C,KAGX,IAAI3F,EAAU4F,EAAgBlG,QAAQC,GAKtC,OAFAR,KAAKoG,wBAEEvF,CACX,CAEA,UAAAI,CAAWC,EAAQsF,GACf,IAAIC,EAAkBzG,KAAK6B,SAASL,MAAK0B,GAAWA,EAAQnC,KAAOyF,IAE9DC,GAKLA,EAAgBxF,WAAWC,GAG3BlB,KAAKoG,yBAPDjE,QAAQE,MAAM,sCAAsCmE,IAQ5D,CAEA,YAAAjF,CAAaL,EAAQsF,GACjB,IAAIC,EAAkBzG,KAAK6B,SAASL,MAAK0B,GAAWA,EAAQnC,KAAOyF,IAEnE,IAAKC,EAED,OADAtE,QAAQE,MAAM,sCAAsCmE,KAC7C,KAGX,IAAIE,EAAeD,EAAgBlF,aAAaL,GAKhD,OAFAlB,KAAKoG,wBAEEM,CACX,CAEA,QAAAxG,CAASuB,EAAcP,EAAQsF,GAC3B,IAAIC,EAAkBzG,KAAK6B,SAASL,MAAK0B,GAAWA,EAAQnC,KAAOyF,IAEnE,IAAKC,EAED,OADAtE,QAAQE,MAAM,sCAAsCmE,KAC7C,KAGX,IAAIG,EAAMF,EAAgBvG,SAASuB,EAAcP,GAKjD,OAFAlB,KAAKoG,wBAEEO,CACX,CAEA,UAAAC,CAAWJ,GAEP,OADsBxG,KAAK6B,SAASL,MAAK0B,GAAWA,EAAQnC,KAAOyF,GAEvE,CAGA,YAAAK,GACI7G,KAAKwF,eAAe/C,gBACpBzC,KAAK6B,SAAW,GAChBM,QAAQC,IAAI,sCAChB,CAGA,cAAAQ,GACI,OAAO5C,KAAKwF,eAAe5C,gBAC/B,ECtLJ,MAAMkE,EAGF,WAAApH,CAAYqH,GAER/G,KAAK+G,kBAAoBA,EACzB/G,KAAKgH,OAAS,KAGdhH,KAAKiH,sBAAwBjH,KAAKiH,sBAAsBC,KAAKlH,MAC7DA,KAAKmH,kBAAoBnH,KAAKmH,kBAAkBD,KAAKlH,MACrDA,KAAKoH,kBAAoBpH,KAAKoH,kBAAkBF,KAAKlH,KAEzD,CAGA,UAAAyF,GAEIzF,KAAKqH,sBAET,CAGA,oBAAAA,GAEIjE,SAASkE,iBAAiB,SAAUC,IAE5BA,EAAMC,OAAOlE,UAAUmE,SAAS,wBAChCzH,KAAKiH,uBACT,GAIR,CAGA,qBAAAA,GAEIjH,KAAKgH,OCzCN,WAEH,MAAMA,EAAS5D,SAASC,cAAc,UACtC2D,EAAO1D,UAAUC,IAAI,oBAErB,MAAMmE,EAAKtE,SAASC,cAAc,MAClCqE,EAAGhE,YAAc,uBACjBsD,EAAOnD,YAAY6D,GAGnB,MAAMC,EAAOvE,SAASC,cAAc,QACpCsE,EAAKnE,aAAa,SAAU,UAC5BwD,EAAOnD,YAAY8D,GAGnB,MAAMC,EAAYxE,SAASC,cAAc,SACzCuE,EAAUlE,YAAc,gBACxBkE,EAAUpE,aAAa,MAAO,eAC9BmE,EAAK9D,YAAY+D,GAEjB,MAAMC,EAAYzE,SAASC,cAAc,SACzCwE,EAAUrE,aAAa,OAAQ,QAC/BqE,EAAUrE,aAAa,KAAM,eAC7BqE,EAAUrE,aAAa,OAAQ,eAC/BqE,EAAUC,UAAW,EACrBH,EAAK9D,YAAYgE,GAGjB,MAAME,EAAe3E,SAASC,cAAc,UAC5C0E,EAAarE,YAAc,SAC3BqE,EAAazE,UAAUC,IAAI,gBAC3BoE,EAAK9D,YAAYkE,GAEjB,MAAMC,EAAe5E,SAASC,cAAc,UAM5C,OALA2E,EAAatE,YAAc,SAC3BsE,EAAa1E,UAAUC,IAAI,gBAC3BoE,EAAK9D,YAAYmE,GAGVhB,CAEX,CDAsBiB,GACd7E,SAAS8E,KAAKrE,YAAY7D,KAAKgH,QAE/BhH,KAAKmI,4BAELnI,KAAKgH,OAAOoB,WAEhB,CAGA,yBAAAD,GAEI,MAAMJ,EAAe/H,KAAKgH,OAAOd,cAAc,iBACzC8B,EAAehI,KAAKgH,OAAOd,cAAc,iBAE/C6B,EAAaT,iBAAiB,QAAStH,KAAKmH,mBAC5Ca,EAAaV,iBAAiB,QAAStH,KAAKoH,mBAG5CpH,KAAKgH,OAAOM,iBAAiB,WAAYC,IACnB,WAAdA,EAAMc,KACNrI,KAAKoH,mBACT,GAGR,CAGA,iBAAAD,GAEI,MAAM1D,EAAczD,KAAKgH,OAAOd,cAAc,SAASoC,MAEvD,GAAI7E,EAAa,CAGb,MACM8E,EAAetF,EADFjD,KAAK+G,kBAAkBlB,cAAcpC,IAExDL,SAAS8C,cAAc,kBAAkBrC,YAAY0E,EAEzD,MAGIC,MAAM,kDAGVxI,KAAKyI,eAET,CAGA,iBAAArB,GACIpH,KAAKyI,eACT,CAGA,aAAAA,GACI,GAAIzI,KAAKgH,OAAQ,CACb,MAAMW,EAAO3H,KAAKgH,OAAOd,cAAc,QACnCyB,GAAMA,EAAKe,QAEf1I,KAAKgH,OAAO2B,QACZ3I,KAAKgH,OAAO1B,SACZtF,KAAKgH,OAAS,IAClB,CAEJ,EE1GJ,MAAM4B,EAAuB,CAC3BC,iBAAkB,CAChBC,IAAK,qBACLC,MAAO,+BAGTC,SAAU,CACRF,IAAK,WACLC,MAAO,qBAGTE,YAAa,gBAEbC,iBAAkB,CAChBJ,IAAK,qBACLC,MAAO,+BAGTI,SAAU,CACRL,IAAK,WACLC,MAAO,qBAGTK,YAAa,CACXN,IAAK,eACLC,MAAO,yBAGTM,OAAQ,CACNP,IAAK,SACLC,MAAO,mBAGTO,MAAO,CACLR,IAAK,QACLC,MAAO,kBAGTQ,YAAa,CACXT,IAAK,eACLC,MAAO,yBAGTS,OAAQ,CACNV,IAAK,SACLC,MAAO,mBAGTU,aAAc,CACZX,IAAK,gBACLC,MAAO,0BAGTW,QAAS,CACPZ,IAAK,UACLC,MAAO,oBAGTY,YAAa,CACXb,IAAK,eACLC,MAAO,yBAGTa,OAAQ,CACNd,IAAK,SACLC,MAAO,mBAGTc,WAAY,CACVf,IAAK,cACLC,MAAO,wBAGTe,aAAc,CACZhB,IAAK,gBACLC,MAAO,2BC3EJ,SAASgB,EAAkBC,GAChC,MAAO,CAACC,EAAU,CAAC,KAEjB,MAAMC,EAAQD,EAAQC,MAAQC,OAAOF,EAAQC,OAASF,EAAKI,aAE3D,OADeJ,EAAKK,QAAQH,IAAUF,EAAKK,QAAQL,EAAKI,aAC3C,CAEjB,CCLA,MAqBaE,EAAa,CACxBpG,KAAM6F,EAAkB,CACtBM,QAvBgB,CAClBE,KAAM,mBACNC,KAAM,aACNC,OAAQ,WACRC,MAAO,cAoBLN,aAAc,SAGhBO,KAAMZ,EAAkB,CACtBM,QArBgB,CAClBE,KAAM,iBACNC,KAAM,cACNC,OAAQ,YACRC,MAAO,UAkBLN,aAAc,SAGhBQ,SAAUb,EAAkB,CAC1BM,QAnBoB,CACtBE,KAAM,yBACNC,KAAM,yBACNC,OAAQ,qBACRC,MAAO,sBAgBLN,aAAc,UCpCZS,EAAuB,CAC3BC,SAAU,qBACVC,UAAW,mBACXC,MAAO,eACPC,SAAU,kBACVC,SAAU,cACVnC,MAAO,KCiCF,SAASoC,EAAgBnB,GAC9B,MAAO,CAAC1B,EAAO2B,KAGb,IAAImB,EACJ,GAAgB,gBAHAnB,GAASoB,QAAUlB,OAAOF,EAAQoB,SAAW,eAG7BrB,EAAKsB,iBAAkB,CACrD,MAAMlB,EAAeJ,EAAKuB,wBAA0BvB,EAAKI,aACnDF,EAAQD,GAASC,MAAQC,OAAOF,EAAQC,OAASE,EAEvDgB,EACEpB,EAAKsB,iBAAiBpB,IAAUF,EAAKsB,iBAAiBlB,EAC1D,KAAO,CACL,MAAMA,EAAeJ,EAAKI,aACpBF,EAAQD,GAASC,MAAQC,OAAOF,EAAQC,OAASF,EAAKI,aAE5DgB,EAAcpB,EAAKwB,OAAOtB,IAAUF,EAAKwB,OAAOpB,EAClD,CAIA,OAAOgB,EAHOpB,EAAKyB,iBAAmBzB,EAAKyB,iBAAiBnD,GAASA,EAG5C,CAE7B,CC7DO,SAASoD,EAAa1B,GAC3B,MAAO,CAAC2B,EAAQ1B,EAAU,CAAC,KACzB,MAAMC,EAAQD,EAAQC,MAEhB0B,EACH1B,GAASF,EAAK6B,cAAc3B,IAC7BF,EAAK6B,cAAc7B,EAAK8B,mBACpBC,EAAcJ,EAAOK,MAAMJ,GAEjC,IAAKG,EACH,OAAO,KAET,MAAME,EAAgBF,EAAY,GAE5BG,EACHhC,GAASF,EAAKkC,cAAchC,IAC7BF,EAAKkC,cAAclC,EAAKmC,mBAEpB9D,EAAM+D,MAAMC,QAAQH,GA+B9B,SAAmBI,GACjB,IAAK,IAAIjE,EAAM,EAAGA,EAAMiE,EAAMvJ,OAAQsF,IACpC,GAAciE,EAAMjE,GAhC8BkE,KAAKN,GAiCrD,OAAO5D,CAIb,CArCQjH,CAAU8K,GAkBlB,SAAiBM,GACf,IAAK,MAAMnE,KAAOmE,EAChB,GACEC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQnE,IACnCmE,EAAOnE,GApB6BkE,KAAKN,GAsBnD,OAAO5D,CAIb,CA1BQwE,CAAQX,GAEZ,IAAI5D,EAUJ,OARAA,EAAQ0B,EAAK8C,cAAgB9C,EAAK8C,cAAczE,GAAOA,EACvDC,EAAQ2B,EAAQ6C,cAEZ7C,EAAQ6C,cAAcxE,GACtBA,EAIG,CAAEA,QAAOyE,KAFHpB,EAAOqB,MAAMf,EAAclJ,QAElB,CAE1B,CCnCO,IAA6BiH,ECc7B,MAAMiD,EAAO,CAClBC,KAAM,QACNC,eP+D4B,CAACC,EAAOC,EAAOpD,KAC3C,IAAIqD,EAEJ,MAAMC,EAAa3E,EAAqBwE,GASxC,OAPEE,EADwB,iBAAfC,EACAA,EACU,IAAVF,EACAE,EAAWzE,IAEXyE,EAAWxE,MAAMyE,QAAQ,YAAaH,EAAMI,YAGnDxD,GAASyD,UACPzD,EAAQ0D,YAAc1D,EAAQ0D,WAAa,EACtC,MAAQL,EAERA,EAAS,OAIbA,CAAM,EOlFbhD,WAAYA,EACZsD,eJT4B,CAACR,EAAOS,EAAOC,EAAWC,IACtDlD,EAAqBuC,GISrBY,SCyIsB,CACtBC,cAzBoB,CAACC,EAAaH,KAClC,MAAMI,EAASC,OAAOF,GAShBG,EAASF,EAAS,IACxB,GAAIE,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOF,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAGtB,OAAOA,EAAS,IAAI,EAMpBG,IAAKnD,EAAgB,CACnBK,OA9Jc,CAChB+C,OAAQ,CAAC,IAAK,KACdC,YAAa,CAAC,KAAM,MACpBC,KAAM,CAAC,gBAAiB,gBA4JtBrE,aAAc,SAGhBsE,QAASvD,EAAgB,CACvBK,OA7JkB,CACpB+C,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCC,KAAM,CAAC,cAAe,cAAe,cAAe,gBA2JlDrE,aAAc,OACdqB,iBAAmBiD,GAAYA,EAAU,IAG3ClK,MAAO2G,EAAgB,CACrBK,OAzJgB,CAClB+C,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEC,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFC,KAAM,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aA6HArE,aAAc,SAGhB3F,IAAK0G,EAAgB,CACnBK,OA7Hc,CAChB+C,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvC7D,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5C8D,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxDC,KAAM,CACJ,SACA,SACA,UACA,YACA,WACA,SACA,aAmHArE,aAAc,SAGhBuE,UAAWxD,EAAgB,CACzBK,OAnHoB,CACtB+C,OAAQ,CACNK,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETX,YAAa,CACXI,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETV,KAAM,CACJG,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,UAuFP/E,aAAc,OACdkB,iBApF8B,CAChCiD,OAAQ,CACNK,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETX,YAAa,CACXI,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETV,KAAM,CACJG,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,aAwDP5D,uBAAwB,UDpK1BS,MEqEmB,CACnBiC,eH1FkCjE,EG0FC,CACjC4B,aAxF8B,wBAyF9BwD,aAxF8B,OAyF9BtC,cAAgBxE,GAAU+G,SAAS/G,EAAO,KH5FrC,CAACqD,EAAQ1B,EAAU,CAAC,KACzB,MAAM8B,EAAcJ,EAAOK,MAAMhC,EAAK4B,cACtC,IAAKG,EAAa,OAAO,KACzB,MAAME,EAAgBF,EAAY,GAE5BuD,EAAc3D,EAAOK,MAAMhC,EAAKoF,cACtC,IAAKE,EAAa,OAAO,KACzB,IAAIhH,EAAQ0B,EAAK8C,cACb9C,EAAK8C,cAAcwC,EAAY,IAC/BA,EAAY,GAOhB,OAJAhH,EAAQ2B,EAAQ6C,cAAgB7C,EAAQ6C,cAAcxE,GAASA,EAIxD,CAAEA,QAAOyE,KAFHpB,EAAOqB,MAAMf,EAAclJ,QAElB,GG+ExBuL,IAAK5C,EAAa,CAChBG,cA3FqB,CACvB0C,OAAQ,UACRC,YAAa,6DACbC,KAAM,8DAyFJ3C,kBAAmB,OACnBI,cAxFqB,CACvBqD,IAAK,CAAC,MAAO,YAwFXpD,kBAAmB,QAGrBuC,QAAShD,EAAa,CACpBG,cAzFyB,CAC3B0C,OAAQ,WACRC,YAAa,YACbC,KAAM,kCAuFJ3C,kBAAmB,OACnBI,cAtFyB,CAC3BqD,IAAK,CAAC,KAAM,KAAM,KAAM,OAsFtBpD,kBAAmB,MACnBW,cAAgB0C,GAAUA,EAAQ,IAGpChL,MAAOkH,EAAa,CAClBG,cAxFuB,CACzB0C,OAAQ,eACRC,YAAa,sDACbC,KAAM,6FAsFJ3C,kBAAmB,OACnBI,cArFuB,CACzBqC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFgB,IAAK,CACH,OACA,MACA,QACA,OACA,QACA,QACA,QACA,OACA,MACA,MACA,MACA,QA0DApD,kBAAmB,QAGrB1H,IAAKiH,EAAa,CAChBG,cA1DqB,CACvB0C,OAAQ,YACR7D,MAAO,2BACP8D,YAAa,kCACbC,KAAM,gEAuDJ3C,kBAAmB,OACnBI,cAtDqB,CACvBqC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDgB,IAAK,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,SAqDjDpD,kBAAmB,QAGrBwC,UAAWjD,EAAa,CACtBG,cAtD2B,CAC7B0C,OAAQ,6DACRgB,IAAK,kFAqDHzD,kBAAmB,MACnBI,cApD2B,CAC7BqD,IAAK,CACHX,GAAI,MACJC,GAAI,MACJC,SAAU,OACVC,KAAM,OACNC,QAAS,WACTC,UAAW,aACXC,QAAS,WACTC,MAAO,WA4CPhD,kBAAmB,SF5GrBlC,QAAS,CACPwF,aAAc,EACdC,sBAAuB,IGvBrBC,EAAoB,CAACC,EAAStF,KAClC,OAAQsF,GACN,IAAK,IACH,OAAOtF,EAAWpG,KAAK,CAAEgG,MAAO,UAClC,IAAK,KACH,OAAOI,EAAWpG,KAAK,CAAEgG,MAAO,WAClC,IAAK,MACH,OAAOI,EAAWpG,KAAK,CAAEgG,MAAO,SAElC,QACE,OAAOI,EAAWpG,KAAK,CAAEgG,MAAO,SACpC,EAGI2F,EAAoB,CAACD,EAAStF,KAClC,OAAQsF,GACN,IAAK,IACH,OAAOtF,EAAWK,KAAK,CAAET,MAAO,UAClC,IAAK,KACH,OAAOI,EAAWK,KAAK,CAAET,MAAO,WAClC,IAAK,MACH,OAAOI,EAAWK,KAAK,CAAET,MAAO,SAElC,QACE,OAAOI,EAAWK,KAAK,CAAET,MAAO,SACpC,EAmCW4F,EAAiB,CAC5BC,EAAGF,EACHG,EAlC4B,CAACJ,EAAStF,KACtC,MAAMyB,EAAc6D,EAAQ5D,MAAM,cAAgB,GAC5CiE,EAAclE,EAAY,GAC1BmE,EAAcnE,EAAY,GAEhC,IAAKmE,EACH,OAAOP,EAAkBC,EAAStF,GAGpC,IAAI6F,EAEJ,OAAQF,GACN,IAAK,IACHE,EAAiB7F,EAAWM,SAAS,CAAEV,MAAO,UAC9C,MACF,IAAK,KACHiG,EAAiB7F,EAAWM,SAAS,CAAEV,MAAO,WAC9C,MACF,IAAK,MACHiG,EAAiB7F,EAAWM,SAAS,CAAEV,MAAO,SAC9C,MAEF,QACEiG,EAAiB7F,EAAWM,SAAS,CAAEV,MAAO,SAIlD,OAAOiG,EACJ3C,QAAQ,WAAYmC,EAAkBM,EAAa3F,IACnDkD,QAAQ,WAAYqC,EAAkBK,EAAa5F,GAAY,GCzD9D8F,EAAmB,OACnBC,EAAkB,OAElBC,EAAc,CAAC,IAAK,KAAM,KAAM,QAE/B,SAASC,EAA0BnD,GACxC,OAAOgD,EAAiB7D,KAAKa,EAC/B,CAEO,SAASoD,EAAyBpD,GACvC,OAAOiD,EAAgB9D,KAAKa,EAC9B,CAEO,SAASqD,EAA0BrD,EAAOsD,EAAQC,GACvD,MAAMC,EAKR,SAAiBxD,EAAOsD,EAAQC,GAC9B,MAAME,EAAuB,MAAbzD,EAAM,GAAa,QAAU,oBAC7C,MAAO,SAASA,EAAMvI,gCAAgCuI,aAAiBsD,uBAA4BG,oBAA0BF,kFAC/H,CARmBG,CAAQ1D,EAAOsD,EAAQC,GAExC,GADAxO,QAAQkE,KAAKuK,GACTN,EAAYS,SAAS3D,GAAQ,MAAM,IAAI4D,WAAWJ,EACxD,CCoCuBK,KAAKC,IAAI,GAAI,GA/B7B,MAsDMC,EAAqB,OA2IrBC,EAAsBC,OAAOC,IAAI,qBClLvC,SAASC,EAAcrN,EAAMoE,GAClC,MAAoB,mBAATpE,EAA4BA,EAAKoE,GAExCpE,GAAwB,iBAATA,GAAqBkN,KAAuBlN,EACtDA,EAAKkN,GAAqB9I,GAE/BpE,aAAgBC,KAAa,IAAID,EAAKxE,YAAY4I,GAE/C,IAAInE,KAAKmE,EAClB,CC9CA,IAAIkJ,EAAiB,CAAC,EAEf,SAASC,IACd,OAAOD,CACT,CCoCO,SAASE,EAAOC,EAAUtG,GAE/B,OAAOkG,EAAclG,GAAWsG,EAAUA,EAC5C,CCtCO,MAAMC,EACXC,YAAc,EAEd,QAAAC,CAASC,EAAUhE,GACjB,OAAO,CACT,EAGK,MAAMiE,UAAoBJ,EAC/B,WAAAlS,CACE4I,EAEA2J,EAEAC,EAEApS,EACA+R,GAEAM,QACAnS,KAAKsI,MAAQA,EACbtI,KAAKiS,cAAgBA,EACrBjS,KAAKkS,SAAWA,EAChBlS,KAAKF,SAAWA,EACZ+R,IACF7R,KAAK6R,YAAcA,EAEvB,CAEA,QAAAC,CAAS5N,EAAM+F,GACb,OAAOjK,KAAKiS,cAAc/N,EAAMlE,KAAKsI,MAAO2B,EAC9C,CAEA,GAAAmI,CAAIlO,EAAMmO,EAAOpI,GACf,OAAOjK,KAAKkS,SAAShO,EAAMmO,EAAOrS,KAAKsI,MAAO2B,EAChD,EAGK,MAAMqI,UAA2BV,EACtC9R,SAzC6B,GA0C7B+R,aAAe,EAEf,WAAAnS,CAAY2L,EAASkH,GACnBJ,QACAnS,KAAKqL,QAAUA,GAAW,CAAEnH,GAASqN,EAAcgB,EAAWrO,GAChE,CAEA,GAAAkO,CAAIlO,EAAMmO,GACR,OAAIA,EAAMG,eAAuBtO,EAC1BqN,EAAcrN,ECxBlB,SAAmBA,EAAMxE,GAC9B,MAAM+S,EAaR,SAAuB/S,GACrB,MACyB,mBAAhBA,GACPA,EAAYgN,WAAWhN,cAAgBA,CAE3C,CAlBgBgT,CAAchT,GACxB,IAAIA,EAAY,GAChB6R,EAAc7R,EAAa,GAQ/B,OAPA+S,EAAME,YAAYzO,EAAK0O,cAAe1O,EAAK2O,WAAY3O,EAAK4O,WAC5DL,EAAMM,SACJ7O,EAAK8O,WACL9O,EAAK+O,aACL/O,EAAKgP,aACLhP,EAAKiP,mBAEAV,CACT,CDY+BW,CAAUlP,EAAMlE,KAAKqL,SAClD,EErDK,MAAMgI,EACX,GAAAC,CAAIrP,EAAYmJ,EAAOpB,EAAO/B,GAC5B,MAAMqD,EAAStN,KAAKwC,MAAMyB,EAAYmJ,EAAOpB,EAAO/B,GACpD,OAAKqD,EAIE,CACLiG,OAAQ,IAAIvB,EACV1E,EAAOhF,MACPtI,KAAK8R,SACL9R,KAAKoS,IACLpS,KAAKF,SACLE,KAAK6R,aAEP9E,KAAMO,EAAOP,MAXN,IAaX,CAEA,QAAA+E,CAASC,EAAUyB,EAAQzF,GACzB,OAAO,CACT,ECvBK,MAAM0F,EACJ,iBADIA,EAEL,qBAFKA,EAGA,kCAHAA,EAIL,qBAJKA,EAKF,qBALEA,EAMF,qBANEA,EAOF,iBAPEA,EAQF,iBAREA,EASH,YATGA,EAUH,YAVGA,EAYE,MAZFA,EAaA,WAbAA,EAcE,WAdFA,EAeC,WAfDA,EAiBM,SAjBNA,EAkBQ,QAlBRA,EAmBM,aAnBNA,EAoBQ,aApBRA,EAqBO,aAGPC,EACW,2BADXA,GAEJ,0BAFIA,GAGW,oCAHXA,GAID,2BAJCA,GAKc,sCCrBpB,SAASC,GAASC,EAAeC,GACtC,OAAKD,EAIE,CACLtL,MAAOuL,EAAMD,EAActL,OAC3ByE,KAAM6G,EAAc7G,MALb6G,CAOX,CAEO,SAASE,GAAoBlE,EAAS3L,GAC3C,MAAM8H,EAAc9H,EAAW+H,MAAM4D,GAErC,OAAK7D,EAIE,CACLzD,MAAO+G,SAAStD,EAAY,GAAI,IAChCgB,KAAM9I,EAAW+I,MAAMjB,EAAY,GAAGhJ,SAL/B,IAOX,CAEO,SAASgR,GAAqBnE,EAAS3L,GAC5C,MAAM8H,EAAc9H,EAAW+H,MAAM4D,GAErC,OAAK7D,EAKkB,MAAnBA,EAAY,GACP,CACLzD,MAAO,EACPyE,KAAM9I,EAAW+I,MAAM,IASpB,CACL1E,OAN8B,MAAnByD,EAAY,GAAa,GAAK,IRkDX,MQjDlBA,EAAY,GAAKsD,SAAStD,EAAY,GAAI,IAAM,GR0C5B,KQzClBA,EAAY,GAAKsD,SAAStD,EAAY,GAAI,IAAM,GRuD9B,KQtDlBA,EAAY,GAAKsD,SAAStD,EAAY,GAAI,IAAM,IAQ9DgB,KAAM9I,EAAW+I,MAAMjB,EAAY,GAAGhJ,SAtB/B,IAwBX,CAEO,SAASiR,GAAqB/P,GACnC,OAAO6P,GAAoBL,EAAiCxP,EAC9D,CAEO,SAASgQ,GAAaC,EAAGjQ,GAC9B,OAAQiQ,GACN,KAAK,EACH,OAAOJ,GAAoBL,EAA6BxP,GAC1D,KAAK,EACH,OAAO6P,GAAoBL,EAA2BxP,GACxD,KAAK,EACH,OAAO6P,GAAoBL,EAA6BxP,GAC1D,KAAK,EACH,OAAO6P,GAAoBL,EAA4BxP,GACzD,QACE,OAAO6P,GAAoB,IAAIK,OAAO,UAAYD,EAAI,KAAMjQ,GAElE,CAEO,SAASmQ,GAAmBF,EAAGjQ,GACpC,OAAQiQ,GACN,KAAK,EACH,OAAOJ,GAAoBL,EAAmCxP,GAChE,KAAK,EACH,OAAO6P,GAAoBL,EAAiCxP,GAC9D,KAAK,EACH,OAAO6P,GAAoBL,EAAmCxP,GAChE,KAAK,EACH,OAAO6P,GAAoBL,EAAkCxP,GAC/D,QACE,OAAO6P,GAAoB,IAAIK,OAAO,YAAcD,EAAI,KAAMjQ,GAEpE,CAEO,SAASoQ,GAAqB1F,GACnC,OAAQA,GACN,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,GACT,IAAK,KACL,IAAK,OACL,IAAK,YACH,OAAO,GAIT,QACE,OAAO,EAEb,CAEO,SAAS2F,GAAsBC,EAAcC,GAClD,MAAMC,EAAcD,EAAc,EAK5BE,EAAiBD,EAAcD,EAAc,EAAIA,EAEvD,IAAIlH,EACJ,GAAIoH,GAAkB,GACpBpH,EAASiH,GAAgB,QACpB,CACL,MAAMI,EAAWD,EAAiB,GAGlCpH,EAASiH,EAF4C,IAA7BtD,KAAK2D,MAAMD,EAAW,MACpBJ,GAAgBI,EAAW,IACU,IAAM,EACvE,CAEA,OAAOF,EAAcnH,EAAS,EAAIA,CACpC,CAEO,SAASuH,GAAgBtQ,GAC9B,OAAOA,EAAO,KAAQ,GAAMA,EAAO,GAAM,GAAKA,EAAO,KAAQ,CAC/D,CCvGO,SAASuQ,GAAY5Q,EAAM+F,GAChC,MAAMuH,EAAiBC,IACjBhC,EACJxF,GAASwF,cACTxF,GAAS8K,QAAQ9K,SAASwF,cAC1B+B,EAAe/B,cACf+B,EAAeuD,QAAQ9K,SAASwF,cAChC,EAEI5B,EAAQ6D,EAAOxN,EAAM+F,GAAS+K,IAC9BvQ,EAAMoJ,EAAMoH,SACZC,GAAQzQ,EAAMgL,EAAe,EAAI,GAAKhL,EAAMgL,EAIlD,OAFA5B,EAAMsH,QAAQtH,EAAMiF,UAAYoC,GAChCrH,EAAMkF,SAAS,EAAG,EAAG,EAAG,GACjBlF,CACT,CCPO,SAASuH,GAAYlR,EAAM+F,GAChC,MAAM4D,EAAQ6D,EAAOxN,EAAM+F,GAAS+K,IAC9BzQ,EAAOsJ,EAAM+E,cAEbpB,EAAiBC,IACjB/B,EACJzF,GAASyF,uBACTzF,GAAS8K,QAAQ9K,SAASyF,uBAC1B8B,EAAe9B,uBACf8B,EAAeuD,QAAQ9K,SAASyF,uBAChC,EAEI2F,EAAsB9D,EAActH,GAAS+K,IAAM9Q,EAAM,GAC/DmR,EAAoB1C,YAAYpO,EAAO,EAAG,EAAGmL,GAC7C2F,EAAoBtC,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMuC,EAAkBR,GAAYO,EAAqBpL,GAEnDsL,EAAsBhE,EAActH,GAAS+K,IAAM9Q,EAAM,GAC/DqR,EAAoB5C,YAAYpO,EAAM,EAAGmL,GACzC6F,EAAoBxC,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMyC,EAAkBV,GAAYS,EAAqBtL,GAEzD,OAAK4D,IAAUyH,EACN/Q,EAAO,GACJsJ,IAAU2H,EACbjR,EAEAA,EAAO,CAElB,CC1CO,SAASkR,GAAevR,EAAM+F,GACnC,OAAO6K,GAAY5Q,EAAM,IAAK+F,EAASwF,aAAc,GACvD,CCWO,SAASiG,GAAQxR,EAAM+F,GAC5B,MAAM4D,EAAQ6D,EAAOxN,EAAM+F,GAAS+K,IAC9BE,GAAQJ,GAAYjH,EAAO5D,ICC5B,SAAyB/F,EAAM+F,GACpC,MAAMuH,EAAiBC,IACjB/B,EACJzF,GAASyF,uBACTzF,GAAS8K,QAAQ9K,SAASyF,uBAC1B8B,EAAe9B,uBACf8B,EAAeuD,QAAQ9K,SAASyF,uBAChC,EAEInL,EAAO6Q,GAAYlR,EAAM+F,GACzB0L,EAAYpE,EAActH,GAAS+K,IAAM9Q,EAAM,GAIrD,OAHAyR,EAAUhD,YAAYpO,EAAM,EAAGmL,GAC/BiG,EAAU5C,SAAS,EAAG,EAAG,EAAG,GACd+B,GAAYa,EAAW1L,EAEvC,CDhB+C2L,CAAgB/H,EAAO5D,GAKpE,OAAOgH,KAAK4E,MAAMX,EAAO/D,GAAsB,CACjD,CElBO,SAAS2E,GAAmB5R,EAAM+F,GACvC,MAAM1F,ECND,SAAwBL,EAAM+F,GACnC,MAAM4D,EAAQ6D,EAAOxN,EAAM+F,GAAS+K,IAC9BzQ,EAAOsJ,EAAM+E,cAEbmD,EAA4BxE,EAAc1D,EAAO,GACvDkI,EAA0BpD,YAAYpO,EAAO,EAAG,EAAG,GACnDwR,EAA0BhD,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMuC,EAAkBG,GAAeM,GAEjCC,EAA4BzE,EAAc1D,EAAO,GACvDmI,EAA0BrD,YAAYpO,EAAM,EAAG,GAC/CyR,EAA0BjD,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMyC,EAAkBC,GAAeO,GAEvC,OAAInI,EAAMxJ,WAAaiR,EAAgBjR,UAC9BE,EAAO,EACLsJ,EAAMxJ,WAAamR,EAAgBnR,UACrCE,EAEAA,EAAO,CAElB,CDfe0R,CAAe/R,EAAM+F,GAC5BiM,EAAkB3E,EAActH,GAAS+K,IAAM9Q,EAAM,GAG3D,OAFAgS,EAAgBvD,YAAYpO,EAAM,EAAG,GACrC2R,EAAgBnD,SAAS,EAAG,EAAG,EAAG,GAC3B0C,GAAeS,EACxB,CERO,SAASC,GAAWjS,EAAMkS,EAAMnM,GACrC,MAAM4D,EAAQ6D,EAAOxN,EAAM+F,GAAS+K,IAC9BE,ECJD,SAAoBhR,EAAM+F,GAC/B,MAAM4D,EAAQ6D,EAAOxN,EAAM+F,GAAS+K,IAC9BE,GAAQO,GAAe5H,IAAUiI,GAAmBjI,GAK1D,OAAOoD,KAAK4E,MAAMX,EAAO/D,GAAsB,CACjD,CDJekF,CAAWxI,EAAO5D,GAAWmM,EAE1C,OADAvI,EAAMsH,QAAQtH,EAAMiF,UAAmB,EAAPoC,GACzBrH,CACT,CE3BA,MAAMyI,GAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7DC,GAA0B,CAC9B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,ICkBvC,SAASC,GAAQtS,EAAMuS,EAAQxM,GACpC,MAAM4D,EAAQ6D,EAAOxN,EAAM+F,GAAS+K,IACpC,OAAI5Q,MAAMqS,GAAgBlF,EAActH,GAAS+K,IAAM9Q,EAAMwS,KAGxDD,GAEL5I,EAAMsH,QAAQtH,EAAMiF,UAAY2D,GACzB5I,GAHaA,CAItB,CCHO,SAAS8I,GAAOzS,EAAMO,EAAKwF,GAChC,MAAMuH,EAAiBC,IACjBhC,EACJxF,GAASwF,cACTxF,GAAS8K,QAAQ9K,SAASwF,cAC1B+B,EAAe/B,cACf+B,EAAeuD,QAAQ9K,SAASwF,cAChC,EAEIgD,EAAQf,EAAOxN,EAAM+F,GAAS+K,IAC9B4B,EAAanE,EAAMwC,SAKnB4B,EAAQ,EAAIpH,EAKlB,OAAO+G,GAAQ/D,EAHbhO,EAAM,GAAKA,EAAM,EACbA,GAAQmS,EAAaC,GAAS,IANlBpS,EAAM,EACM,GAAK,EAMhBoS,GAAS,GAAOD,EAAaC,GAAS,EAC7B5M,EAC9B,CCxBO,SAAS6M,GAAU5S,EAAMO,EAAKwF,GACnC,MAAMwI,EAAQf,EAAOxN,EAAM+F,GAAS+K,IAGpC,OAAOwB,GAAQ/D,EADFhO,ECRR,SAAmBP,EAAM+F,GAC9B,MAAMxF,EAAMiN,EAAOxN,EAAM+F,GAAS+K,IAAIC,SACtC,OAAe,IAARxQ,EAAY,EAAIA,CACzB,CDIqBsS,CAAUtE,EAAOxI,GAERA,EAC9B,CExBO,SAAS+M,GAAgC9S,GAC9C,MAAM2J,EAAQ6D,EAAOxN,GACf+S,EAAU,IAAI9S,KAClBA,KAAK+S,IACHrJ,EAAM+E,cACN/E,EAAMgF,WACNhF,EAAMiF,UACNjF,EAAMmF,WACNnF,EAAMoF,aACNpF,EAAMqF,aACNrF,EAAMsF,oBAIV,OADA8D,EAAQE,eAAetJ,EAAM+E,gBACrB1O,GAAQ+S,CAClB,CC+CO,MAAMG,GAAU,CACrBC,EAAG,IC1EE,cAAwBhE,EAC7BvT,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACEpB,EAAMsC,IAAIrK,EAAY,CAAEiG,MAAO,iBAC/B8B,EAAMsC,IAAIrK,EAAY,CAAEiG,MAAO,WAInC,IAAK,QACH,OAAO8B,EAAMsC,IAAIrK,EAAY,CAAEiG,MAAO,WAGxC,QACE,OACE8B,EAAMsC,IAAIrK,EAAY,CAAEiG,MAAO,UAC/B8B,EAAMsC,IAAIrK,EAAY,CAAEiG,MAAO,iBAC/B8B,EAAMsC,IAAIrK,EAAY,CAAEiG,MAAO,WAGvC,CAEA,GAAAkI,CAAIlO,EAAMmO,EAAO/J,GAIf,OAHA+J,EAAM/D,IAAMhG,EACZpE,EAAKyO,YAAYrK,EAAO,EAAG,GAC3BpE,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,MDwCrCC,EAAG,IEjEE,cAAyBlE,EAC9BvT,SAAW,IACXwX,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEnE,KAAA9U,CAAMyB,EAAYmJ,EAAOpB,GACvB,MAAMc,EAAiBvI,IAAS,CAC9BA,OACAiT,eAA0B,OAAVpK,IAGlB,OAAQA,GACN,IAAK,IACH,OAAOuG,GAASM,GAAa,EAAGhQ,GAAa6I,GAC/C,IAAK,KACH,OAAO6G,GACL3H,EAAMiC,cAAchK,EAAY,CAC9BwT,KAAM,SAER3K,GAEJ,QACE,OAAO6G,GAASM,GAAa7G,EAAMrK,OAAQkB,GAAa6I,GAE9D,CAEA,QAAAgF,CAASjE,EAAOvF,GACd,OAAOA,EAAMkP,gBAAkBlP,EAAM/D,KAAO,CAC9C,CAEA,GAAA6N,CAAIlO,EAAMmO,EAAO/J,GACf,MAAMkM,EAActQ,EAAK0O,cAEzB,GAAItK,EAAMkP,eAAgB,CACxB,MAAME,EAAyBpD,GAC7BhM,EAAM/D,KACNiQ,GAIF,OAFAtQ,EAAKyO,YAAY+E,EAAwB,EAAG,GAC5CxT,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEA,MAAMK,EACF,QAAS8N,GAAwB,IAAdA,EAAM/D,IAAyB,EAAIhG,EAAM/D,KAAvB+D,EAAM/D,KAG/C,OAFAL,EAAKyO,YAAYpO,EAAM,EAAG,GAC1BL,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,GFmBAyT,EAAG,IGtEE,cAAkCtE,EACvCvT,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,MAAMc,EAAiBvI,IAAS,CAC9BA,OACAiT,eAA0B,OAAVpK,IAGlB,OAAQA,GACN,IAAK,IACH,OAAOuG,GAASM,GAAa,EAAGhQ,GAAa6I,GAC/C,IAAK,KACH,OAAO6G,GACL3H,EAAMiC,cAAchK,EAAY,CAC9BwT,KAAM,SAER3K,GAEJ,QACE,OAAO6G,GAASM,GAAa7G,EAAMrK,OAAQkB,GAAa6I,GAE9D,CAEA,QAAAgF,CAASjE,EAAOvF,GACd,OAAOA,EAAMkP,gBAAkBlP,EAAM/D,KAAO,CAC9C,CAEA,GAAA6N,CAAIlO,EAAMmO,EAAO/J,EAAO2B,GACtB,MAAMuK,EAAcY,GAAYlR,EAAM+F,GAEtC,GAAI3B,EAAMkP,eAAgB,CACxB,MAAME,EAAyBpD,GAC7BhM,EAAM/D,KACNiQ,GAQF,OANAtQ,EAAKyO,YACH+E,EACA,EACAzN,EAAQyF,uBAEVxL,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB+B,GAAY5Q,EAAM+F,EAC3B,CAEA,MAAM1F,EACF,QAAS8N,GAAwB,IAAdA,EAAM/D,IAAyB,EAAIhG,EAAM/D,KAAvB+D,EAAM/D,KAG/C,OAFAL,EAAKyO,YAAYpO,EAAM,EAAG0F,EAAQyF,uBAClCxL,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB+B,GAAY5Q,EAAM+F,EAC3B,CAEAqN,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MHMFM,EAAG,IIxEE,cAAgCvE,EACrCvT,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,GAChB,OACSgH,GADK,MAAVhH,EACwB,EAGFA,EAAMrK,OAHDkB,EAIjC,CAEA,GAAAmO,CAAIlO,EAAM2T,EAAQvP,GAChB,MAAMwP,EAAkBvG,EAAcrN,EAAM,GAG5C,OAFA4T,EAAgBnF,YAAYrK,EAAO,EAAG,GACtCwP,EAAgB/E,SAAS,EAAG,EAAG,EAAG,GAC3B0C,GAAeqC,EACxB,CAEAR,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MJwCFS,EAAG,IK5EE,cAAiC1E,EACtCvT,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,GAChB,OACSgH,GADK,MAAVhH,EACwB,EAGFA,EAAMrK,OAHDkB,EAIjC,CAEA,GAAAmO,CAAIlO,EAAM2T,EAAQvP,GAGhB,OAFApE,EAAKyO,YAAYrK,EAAO,EAAG,GAC3BpE,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,ML4DxEU,EAAG,IM7EE,cAA4B3E,EACjCvT,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GAEN,IAAK,IACL,IAAK,KACH,OAAO6G,GAAa7G,EAAMrK,OAAQkB,GAEpC,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,YAEjD,IAAK,MACH,OACEzL,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,SACPmB,QAAS,eAKf,IAAK,QACH,OAAOW,EAAM0C,QAAQzK,EAAY,CAC/BiG,MAAO,SACPmB,QAAS,eAIb,QACE,OACEW,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,OACPmB,QAAS,gBAEXW,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,SACPmB,QAAS,eAInB,CAEA,QAAAyG,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAGhB,OAFApE,EAAK+T,SAAuB,GAAb3P,EAAQ,GAAQ,GAC/BpE,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MNGFY,EAAG,IO9EE,cAAsC7E,EAC3CvT,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GAEN,IAAK,IACL,IAAK,KACH,OAAO6G,GAAa7G,EAAMrK,OAAQkB,GAEpC,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,YAEjD,IAAK,MACH,OACEzL,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,SACPmB,QAAS,eAKf,IAAK,QACH,OAAOW,EAAM0C,QAAQzK,EAAY,CAC/BiG,MAAO,SACPmB,QAAS,eAIb,QACE,OACEW,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,OACPmB,QAAS,gBAEXW,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM0C,QAAQzK,EAAY,CACxBiG,MAAO,SACPmB,QAAS,eAInB,CAEA,QAAAyG,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAGhB,OAFApE,EAAK+T,SAAuB,GAAb3P,EAAQ,GAAQ,GAC/BpE,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MPIFa,EAAG,IQ9EE,cAA0B9E,EAC/BiE,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGFxX,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,MAAMc,EAAiBxE,GAAUA,EAAQ,EAEzC,OAAQ8E,GAEN,IAAK,IACH,OAAOuG,GACLG,GAAoBL,EAAuBxP,GAC3C6I,GAGJ,IAAK,KACH,OAAO6G,GAASM,GAAa,EAAGhQ,GAAa6I,GAE/C,IAAK,KACH,OAAO6G,GACL3H,EAAMiC,cAAchK,EAAY,CAC9BwT,KAAM,UAER3K,GAGJ,IAAK,MACH,OACEd,EAAMxH,MAAMP,EAAY,CACtBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMxH,MAAMP,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAIxD,IAAK,QACH,OAAOW,EAAMxH,MAAMP,EAAY,CAC7BiG,MAAO,SACPmB,QAAS,eAIb,QACE,OACEW,EAAMxH,MAAMP,EAAY,CAAEiG,MAAO,OAAQmB,QAAS,gBAClDW,EAAMxH,MAAMP,EAAY,CACtBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMxH,MAAMP,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAG5D,CAEA,QAAAyG,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAGhB,OAFApE,EAAK+T,SAAS3P,EAAO,GACrBpE,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,GRCAkU,EAAG,IS/EE,cAAoC/E,EACzCvT,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,MAAMc,EAAiBxE,GAAUA,EAAQ,EAEzC,OAAQ8E,GAEN,IAAK,IACH,OAAOuG,GACLG,GAAoBL,EAAuBxP,GAC3C6I,GAGJ,IAAK,KACH,OAAO6G,GAASM,GAAa,EAAGhQ,GAAa6I,GAE/C,IAAK,KACH,OAAO6G,GACL3H,EAAMiC,cAAchK,EAAY,CAC9BwT,KAAM,UAER3K,GAGJ,IAAK,MACH,OACEd,EAAMxH,MAAMP,EAAY,CACtBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMxH,MAAMP,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAIxD,IAAK,QACH,OAAOW,EAAMxH,MAAMP,EAAY,CAC7BiG,MAAO,SACPmB,QAAS,eAIb,QACE,OACEW,EAAMxH,MAAMP,EAAY,CAAEiG,MAAO,OAAQmB,QAAS,gBAClDW,EAAMxH,MAAMP,EAAY,CACtBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMxH,MAAMP,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAG5D,CAEA,QAAAyG,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAGhB,OAFApE,EAAK+T,SAAS3P,EAAO,GACrBpE,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MTGFe,EAAG,IU7EE,cAA8BhF,EACnCvT,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACH,OAAO0G,GAAoBL,EAAsBxP,GACnD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,SACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,EAAO2B,GACvB,OAAO6K,GCkBJ,SAAiB5Q,EAAMkS,EAAMnM,GAClC,MAAMwI,EAAQf,EAAOxN,EAAM+F,GAAS+K,IAC9BE,EAAOQ,GAAQjD,EAAOxI,GAAWmM,EAEvC,OADA3D,EAAM0C,QAAQ1C,EAAMK,UAAmB,EAAPoC,GACzBxD,EAAOe,EAAOxI,GAAS+K,GAChC,CDvBuBsD,CAAQpU,EAAMoE,EAAO2B,GAAUA,EACpD,CAEAqN,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MV2CFiB,EAAG,IY9EE,cAA4BlF,EACjCvT,SAAW,IAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACH,OAAO0G,GAAoBL,EAAsBxP,GACnD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,SACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAChB,OAAOmN,GAAeU,GAAWjS,EAAMoE,GACzC,CAEAgP,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MZ2CFkB,EAAG,INxEE,cAAyBnF,EAC9BvT,SAAW,GACX+R,YAAc,EAEd,KAAArP,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACH,OAAO0G,GAAoBL,EAAsBxP,GACnD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,SACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAAS5N,EAAMoE,GACb,MACMmQ,EAAa5D,GADN3Q,EAAK0O,eAEZpO,EAAQN,EAAK2O,WACnB,OAAI4F,EACKnQ,GAAS,GAAKA,GAASiO,GAAwB/R,GAE/C8D,GAAS,GAAKA,GAASgO,GAAc9R,EAEhD,CAEA,GAAA4N,CAAIlO,EAAM2T,EAAQvP,GAGhB,OAFApE,EAAKiR,QAAQ7M,GACbpE,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MM6BFoB,EAAG,Ia/EE,cAA8BrF,EACnCvT,SAAW,GAEX6Y,YAAc,EAEd,KAAAnW,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACL,IAAK,KACH,OAAO0G,GAAoBL,EAA2BxP,GACxD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,SACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAAS5N,EAAMoE,GAGb,OADmBuM,GADN3Q,EAAK0O,eAGTtK,GAAS,GAAKA,GAAS,IAEvBA,GAAS,GAAKA,GAAS,GAElC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAGhB,OAFApE,EAAK+T,SAAS,EAAG3P,GACjBpE,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MbgCFsB,EAAG,IcrFE,cAAwBvF,EAC7BvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACEpB,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,QAASmB,QAAS,gBACjDW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAItD,IAAK,QACH,OAAOW,EAAMvH,IAAIR,EAAY,CAC3BiG,MAAO,SACPmB,QAAS,eAGb,IAAK,SACH,OACEW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,QAASmB,QAAS,gBACjDW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAKtD,QACE,OACEW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,OAAQmB,QAAS,gBAChDW,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,QAASmB,QAAS,gBACjDW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAG1D,CAEA,QAAAyG,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,EAAO2B,GAGvB,OAFA/F,EAAOyS,GAAOzS,EAAMoE,EAAO2B,IACtB8I,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,Md8B/C5S,EAAG,IepFE,cAA6B2O,EAClCvT,SAAW,GACX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,EAAO/B,GAC9B,MAAM6C,EAAiBxE,IAErB,MAAMuQ,EAA8C,EAA9B5H,KAAK6H,OAAOxQ,EAAQ,GAAK,GAC/C,OAASA,EAAQ2B,EAAQwF,aAAe,GAAK,EAAKoJ,CAAa,EAGjE,OAAQzL,GAEN,IAAK,IACL,IAAK,KACH,OAAOuG,GAASM,GAAa7G,EAAMrK,OAAQkB,GAAa6I,GAE1D,IAAK,KACH,OAAO6G,GACL3H,EAAMiC,cAAchK,EAAY,CAC9BwT,KAAM,QAER3K,GAGJ,IAAK,MACH,OACEd,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,QAASmB,QAAS,gBACjDW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAItD,IAAK,QACH,OAAOW,EAAMvH,IAAIR,EAAY,CAC3BiG,MAAO,SACPmB,QAAS,eAGb,IAAK,SACH,OACEW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,QAASmB,QAAS,gBACjDW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAKtD,QACE,OACEW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,OAAQmB,QAAS,gBAChDW,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,QAASmB,QAAS,gBACjDW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAG1D,CAEA,QAAAyG,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,EAAO2B,GAGvB,OAFA/F,EAAOyS,GAAOzS,EAAMoE,EAAO2B,IACtB8I,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MfDFyB,EAAG,IgBrFE,cAAuC1F,EAC5CvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,EAAO/B,GAC9B,MAAM6C,EAAiBxE,IAErB,MAAMuQ,EAA8C,EAA9B5H,KAAK6H,OAAOxQ,EAAQ,GAAK,GAC/C,OAASA,EAAQ2B,EAAQwF,aAAe,GAAK,EAAKoJ,CAAa,EAGjE,OAAQzL,GAEN,IAAK,IACL,IAAK,KACH,OAAOuG,GAASM,GAAa7G,EAAMrK,OAAQkB,GAAa6I,GAE1D,IAAK,KACH,OAAO6G,GACL3H,EAAMiC,cAAchK,EAAY,CAC9BwT,KAAM,QAER3K,GAGJ,IAAK,MACH,OACEd,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,QAASmB,QAAS,gBACjDW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAItD,IAAK,QACH,OAAOW,EAAMvH,IAAIR,EAAY,CAC3BiG,MAAO,SACPmB,QAAS,eAGb,IAAK,SACH,OACEW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,QAASmB,QAAS,gBACjDW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAKtD,QACE,OACEW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,OAAQmB,QAAS,gBAChDW,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,QAASmB,QAAS,gBACjDW,EAAMvH,IAAIR,EAAY,CAAEiG,MAAO,SAAUmB,QAAS,eAG1D,CAEA,QAAAyG,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,EAAO2B,GAGvB,OAFA/F,EAAOyS,GAAOzS,EAAMoE,EAAO2B,IACtB8I,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MhBDF0B,EAAG,IiBtFE,cAA2B3F,EAChCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,MAAMc,EAAiBxE,GACP,IAAVA,EACK,EAEFA,EAGT,OAAQ8E,GAEN,IAAK,IACL,IAAK,KACH,OAAO6G,GAAa7G,EAAMrK,OAAQkB,GAEpC,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,QAEjD,IAAK,MACH,OAAO9D,GACL3H,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,cACPmB,QAAS,gBAETW,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,QACPmB,QAAS,gBAEXW,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,SACPmB,QAAS,eAEbyB,GAGJ,IAAK,QACH,OAAO6G,GACL3H,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,SACPmB,QAAS,eAEXyB,GAGJ,IAAK,SACH,OAAO6G,GACL3H,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,QACPmB,QAAS,gBAETW,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,SACPmB,QAAS,eAEbyB,GAIJ,QACE,OAAO6G,GACL3H,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,OACPmB,QAAS,gBAETW,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,cACPmB,QAAS,gBAEXW,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,QACPmB,QAAS,gBAEXW,EAAMvH,IAAIR,EAAY,CACpBiG,MAAO,SACPmB,QAAS,eAEbyB,GAGR,CAEA,QAAAgF,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAGhB,OAFApE,EAAO4S,GAAU5S,EAAMoE,IAClByK,SAAS,EAAG,EAAG,EAAG,GAChB7O,CACT,CAEAoT,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MjBrBF2B,EAAG,IkBzFE,cAAyB5F,EAC9BvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACEpB,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,SACPmB,QAAS,eAIf,IAAK,QACH,OAAOW,EAAM2C,UAAU1K,EAAY,CACjCiG,MAAO,SACPmB,QAAS,eAGb,QACE,OACEW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,OACPmB,QAAS,gBAEXW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,SACPmB,QAAS,eAInB,CAEA,GAAA+G,CAAIlO,EAAM2T,EAAQvP,GAEhB,OADApE,EAAK6O,SAASsB,GAAqB/L,GAAQ,EAAG,EAAG,GAC1CpE,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MlB0C/C4B,EAAG,ImB1FE,cAAiC7F,EACtCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACEpB,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,SACPmB,QAAS,eAIf,IAAK,QACH,OAAOW,EAAM2C,UAAU1K,EAAY,CACjCiG,MAAO,SACPmB,QAAS,eAGb,QACE,OACEW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,OACPmB,QAAS,gBAEXW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,SACPmB,QAAS,eAInB,CAEA,GAAA+G,CAAIlO,EAAM2T,EAAQvP,GAEhB,OADApE,EAAK6O,SAASsB,GAAqB/L,GAAQ,EAAG,EAAG,GAC1CpE,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MnB2C/C6B,EAAG,IoB1FE,cAA8B9F,EACnCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACEpB,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,SACPmB,QAAS,eAIf,IAAK,QACH,OAAOW,EAAM2C,UAAU1K,EAAY,CACjCiG,MAAO,SACPmB,QAAS,eAGb,QACE,OACEW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,OACPmB,QAAS,gBAEXW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,cACPmB,QAAS,gBAEXW,EAAM2C,UAAU1K,EAAY,CAC1BiG,MAAO,SACPmB,QAAS,eAInB,CAEA,GAAA+G,CAAIlO,EAAM2T,EAAQvP,GAEhB,OADApE,EAAK6O,SAASsB,GAAqB/L,GAAQ,EAAG,EAAG,GAC1CpE,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,MpB2CrC8B,EAAG,IqB3FE,cAA8B/F,EACnCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACH,OAAO0G,GAAoBL,EAAyBxP,GACtD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,SACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAChB,MAAM+Q,EAAOnV,EAAK8O,YAAc,GAQhC,OAPIqG,GAAQ/Q,EAAQ,GAClBpE,EAAK6O,SAASzK,EAAQ,GAAI,EAAG,EAAG,GACtB+Q,GAAkB,KAAV/Q,EAGlBpE,EAAK6O,SAASzK,EAAO,EAAG,EAAG,GAF3BpE,EAAK6O,SAAS,EAAG,EAAG,EAAG,GAIlB7O,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,MrB8D1CgC,EAAG,IsB5FE,cAA8BjG,EACnCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACH,OAAO0G,GAAoBL,EAAyBxP,GACtD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,SACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAEhB,OADApE,EAAK6O,SAASzK,EAAO,EAAG,EAAG,GACpBpE,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MtBsEpDiC,EAAG,IuB7FE,cAA8BlG,EACnCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACH,OAAO0G,GAAoBL,EAAyBxP,GACtD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,SACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAOhB,OANapE,EAAK8O,YAAc,IACpB1K,EAAQ,GAClBpE,EAAK6O,SAASzK,EAAQ,GAAI,EAAG,EAAG,GAEhCpE,EAAK6O,SAASzK,EAAO,EAAG,EAAG,GAEtBpE,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,MvBkE1CkC,EAAG,IwB9FE,cAA8BnG,EACnCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACH,OAAO0G,GAAoBL,EAAyBxP,GACtD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,SACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAChB,MAAMmR,EAAQnR,GAAS,GAAKA,EAAQ,GAAKA,EAEzC,OADApE,EAAK6O,SAAS0G,EAAO,EAAG,EAAG,GACpBvV,CACT,CAEAoT,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MxBuEpDoC,EAAG,IyB/FE,cAA2BrG,EAChCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACH,OAAO0G,GAAoBL,EAAwBxP,GACrD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,WACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAEhB,OADApE,EAAKyV,WAAWrR,EAAO,EAAG,GACnBpE,CACT,CAEAoT,mBAAqB,CAAC,IAAK,MzByE3BsC,EAAG,I0BhGE,cAA2BvG,EAChCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,EAAOpB,GACvB,OAAQoB,GACN,IAAK,IACH,OAAO0G,GAAoBL,EAAwBxP,GACrD,IAAK,KACH,OAAO+H,EAAMiC,cAAchK,EAAY,CAAEwT,KAAM,WACjD,QACE,OAAOxD,GAAa7G,EAAMrK,OAAQkB,GAExC,CAEA,QAAA6N,CAASjE,EAAOvF,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAA8J,CAAIlO,EAAM2T,EAAQvP,GAEhB,OADApE,EAAK2V,WAAWvR,EAAO,GAChBpE,CACT,CAEAoT,mBAAqB,CAAC,IAAK,M1B0E3BwC,EAAG,I2BlGE,cAAqCzG,EAC1CvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,GAGhB,OAAOuG,GAASM,GAAa7G,EAAMrK,OAAQkB,IAFpBqE,GACrB2I,KAAK2D,MAAMtM,EAAQ2I,KAAKC,IAAI,GAAoB,EAAf9D,EAAMrK,UAE3C,CAEA,GAAAqP,CAAIlO,EAAM2T,EAAQvP,GAEhB,OADApE,EAAK6V,gBAAgBzR,GACdpE,CACT,CAEAoT,mBAAqB,CAAC,IAAK,M3BqF3B0C,EAAG,I4B/FE,cAAqC3G,EAC1CvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,GAChB,OAAQA,GACN,IAAK,IACH,OAAO2G,GACLL,EACAzP,GAEJ,IAAK,KACH,OAAO8P,GAAqBL,GAAwBzP,GACtD,IAAK,OACH,OAAO8P,GACLL,GACAzP,GAEJ,IAAK,QACH,OAAO8P,GACLL,GACAzP,GAGJ,QACE,OAAO8P,GAAqBL,GAA2BzP,GAE7D,CAEA,GAAAmO,CAAIlO,EAAMmO,EAAO/J,GACf,OAAI+J,EAAMG,eAAuBtO,EAC1BqN,EACLrN,EACAA,EAAKG,UAAY2S,GAAgC9S,GAAQoE,EAE7D,CAEAgP,mBAAqB,CAAC,IAAK,IAAK,M5B4DhC2C,EAAG,I6BhGE,cAAgC5G,EACrCvT,SAAW,GAEX,KAAA0C,CAAMyB,EAAYmJ,GAChB,OAAQA,GACN,IAAK,IACH,OAAO2G,GACLL,EACAzP,GAEJ,IAAK,KACH,OAAO8P,GAAqBL,GAAwBzP,GACtD,IAAK,OACH,OAAO8P,GACLL,GACAzP,GAEJ,IAAK,QACH,OAAO8P,GACLL,GACAzP,GAGJ,QACE,OAAO8P,GAAqBL,GAA2BzP,GAE7D,CAEA,GAAAmO,CAAIlO,EAAMmO,EAAO/J,GACf,OAAI+J,EAAMG,eAAuBtO,EAC1BqN,EACLrN,EACAA,EAAKG,UAAY2S,GAAgC9S,GAAQoE,EAE7D,CAEAgP,mBAAqB,CAAC,IAAK,IAAK,M7B6DhC4C,EAAG,I8BpGE,cAAqC7G,EAC1CvT,SAAW,GAEX,KAAA0C,CAAMyB,GACJ,OAAO+P,GAAqB/P,EAC9B,CAEA,GAAAmO,CAAIlO,EAAM2T,EAAQvP,GAChB,MAAO,CAACiJ,EAAcrN,EAAc,IAARoE,GAAe,CAAEkK,gBAAgB,GAC/D,CAEA8E,mBAAqB,K9B0FrB6C,EAAG,I+BrGE,cAA0C9G,EAC/CvT,SAAW,GAEX,KAAA0C,CAAMyB,GACJ,OAAO+P,GAAqB/P,EAC9B,CAEA,GAAAmO,CAAIlO,EAAM2T,EAAQvP,GAChB,MAAO,CAACiJ,EAAcrN,EAAMoE,GAAQ,CAAEkK,gBAAgB,GACxD,CAEA8E,mBAAqB,MCiBjB8C,GACJ,wDAIIC,GAA6B,oCAE7BC,GAAsB,eACtBC,GAAoB,MAEpBC,GAAsB,KACtBC,GAAgC,WA4S/B,SAASjY,GAAMkY,EAASC,EAAWC,EAAe3Q,GACvD,MAAM4Q,EAAc,IAAMtJ,EAActH,GAAS+K,IAAM4F,EAAelE,KAChElF,EC/TC/E,OAAOqO,OAAO,CAAC,EAAG,KDgUnB/F,EAAS9K,GAAS8K,QAAUvD,EAAeuD,QAAU,EAErDrF,EACJzF,GAASyF,uBACTzF,GAAS8K,QAAQ9K,SAASyF,uBAC1B8B,EAAe9B,uBACf8B,EAAeuD,QAAQ9K,SAASyF,uBAChC,EAEID,EACJxF,GAASwF,cACTxF,GAAS8K,QAAQ9K,SAASwF,cAC1B+B,EAAe/B,cACf+B,EAAeuD,QAAQ9K,SAASwF,cAChC,EAEF,IAAKkL,EACH,OAAOD,EAAUG,IAAgBnJ,EAAOkJ,EAAe3Q,GAAS+K,IAElE,MAAM+F,EAAe,CACnBrL,wBACAD,eACAsF,UAKIiG,EAAU,CAAC,IAAI1I,EAAmBrI,GAAS+K,GAAI4F,IAE/CK,EAASN,EACZ3O,MAAMqO,IACNa,KAAKC,IACJ,MAAMC,EAAiBD,EAAU,GACjC,OAAIC,KAAkBtL,GAEbuL,EADevL,EAAesL,IAChBD,EAAWpG,EAAOzK,YAElC6Q,CAAS,IAEjBG,KAAK,IACLtP,MAAMoO,IAEHmB,EAAa,GAEnB,IAAK,IAAInO,KAAS6N,EAAQ,EAErBhR,GAASuR,6BACVhL,EAAyBpD,IAEzBqD,EAA0BrD,EAAOuN,EAAWD,IAG3CzQ,GAASwR,8BACVlL,EAA0BnD,IAE1BqD,EAA0BrD,EAAOuN,EAAWD,GAG9C,MAAMU,EAAiBhO,EAAM,GACvBsO,EAAStE,GAAQgE,GACvB,GAAIM,EAAQ,CACV,MAAM,mBAAEpE,GAAuBoE,EAC/B,GAAItP,MAAMC,QAAQiL,GAAqB,CACrC,MAAMqE,EAAoBJ,EAAW/Z,MAClCoa,GACCtE,EAAmBvG,SAAS6K,EAAUxO,QACtCwO,EAAUxO,QAAUgO,IAExB,GAAIO,EACF,MAAM,IAAI3K,WACR,uCAAuC2K,EAAkBE,qBAAqBzO,uBAGpF,MAAO,GAAkC,MAA9BsO,EAAOpE,oBAA8BiE,EAAWxY,OAAS,EAClE,MAAM,IAAIiO,WACR,uCAAuC5D,4CAI3CmO,EAAWva,KAAK,CAAEoM,MAAOgO,EAAgBS,UAAWzO,IAEpD,MAAMkC,EAAcoM,EAAOpI,IACzBoH,EACAtN,EACA2H,EAAO/I,MACP+O,GAGF,IAAKzL,EACH,OAAOuL,IAGTG,EAAQha,KAAKsO,EAAYiE,QAEzBmH,EAAUpL,EAAYvC,IACxB,KAAO,CACL,GAAIqO,EAAepP,MAAMyO,IACvB,MAAM,IAAIzJ,WACR,iEACEoK,EACA,KAYN,GAPc,OAAVhO,EACFA,EAAQ,IACoB,MAAnBgO,IACThO,EAA2BA,EAqDpBpB,MAAMsO,IAAqB,GAAG9M,QAAQ+M,GAAmB,MAjDnC,IAA3BG,EAAQoB,QAAQ1O,GAGlB,OAAOyN,IAFPH,EAAUA,EAAQ1N,MAAMI,EAAMrK,OAIlC,CACF,CAGA,GAAI2X,EAAQ3X,OAAS,GAAKyX,GAAoBjO,KAAKmO,GACjD,OAAOG,IAGT,MAAMkB,EAAwBf,EAC3BE,KAAK3H,GAAWA,EAAOzT,WACvBkc,MAAK,CAAC/C,EAAGC,IAAMA,EAAID,IACnBgD,QAAO,CAACnc,EAAU0P,EAAOlD,IAAUA,EAAMwP,QAAQhc,KAAc0P,IAC/D0L,KAAKpb,GACJkb,EACGiB,QAAQ1I,GAAWA,EAAOzT,WAAaA,IACvCkc,MAAK,CAAC/C,EAAGC,IAAMA,EAAErH,YAAcoH,EAAEpH,gBAErCqJ,KAAKgB,GAAgBA,EAAY,KAEpC,IAAIhY,EAAOwN,EAAOkJ,EAAe3Q,GAAS+K,IAE1C,GAAI5Q,OAAOF,GAAO,OAAO2W,IAEzB,MAAMxI,EAAQ,CAAC,EACf,IAAK,MAAMkB,KAAUwI,EAAuB,CAC1C,IAAKxI,EAAOzB,SAAS5N,EAAM6W,GACzB,OAAOF,IAGT,MAAMvN,EAASiG,EAAOnB,IAAIlO,EAAMmO,EAAO0I,GAEnC3O,MAAMC,QAAQiB,IAChBpJ,EAAOoJ,EAAO,GACdb,OAAOqO,OAAOzI,EAAO/E,EAAO,KAG5BpJ,EAAOoJ,CAEX,CAEA,OAAOpJ,CACT,CEvdO,SAASiY,GAAQjY,GACtB,WCHqBoE,EDGHpE,aCDCC,MACC,iBAAVmE,GACoC,kBAA1CmE,OAAOC,UAAUe,SAASb,KAAKtE,KDDQ,iBAATpE,GAAsBE,OAAOsN,EAAOxN,KCHjE,IAAgBoE,CDIvB,CElCO,SAAS8T,GAAanY,GAEzB,IAAKA,GAAoC,KAAtBA,EAAWoY,OAC1B,OAAO,KAIX,MAAMC,EAAa9Z,GAAMyB,EAAY,aAAc,IAAIE,MAEvD,OAAKgY,GAAQG,GAINA,EAHI,IAKf,CCbA,MAAMC,GACF,WAAA7c,CAAYqH,GACR/G,KAAK+G,kBAAoBA,EACzB/G,KAAKgH,OAAS,KACdhH,KAAKwc,iBAAmB,KACxBxc,KAAKyc,wBAA0B,KAG/Bzc,KAAK0c,mBAAqB1c,KAAK0c,mBAAmBxV,KAAKlH,MACvDA,KAAKmH,kBAAoBnH,KAAKmH,kBAAkBD,KAAKlH,MACrDA,KAAKoH,kBAAoBpH,KAAKoH,kBAAkBF,KAAKlH,KACzD,CAGA,UAAAyF,GACIzF,KAAKqH,sBACT,CAGA,oBAAAA,GAEIjE,SAASkE,iBAAiB,SAAUC,IAC5BA,EAAMC,OAAOlE,UAAUmE,SAAS,aAChCzH,KAAK0c,mBAAmBnV,EAC5B,GAMR,CAGA,kBAAAmV,CAAmBnV,GAGfvH,KAAKgH,OCtCN,WAGH,MAAMA,EAAS5D,SAASC,cAAc,UAGhCqE,EAAKtE,SAASC,cAAc,MAClCqE,EAAGhE,YAAc,kCACjBsD,EAAOnD,YAAY6D,GACnBV,EAAO1D,UAAUC,IAAI,iBAGrB,MAAMoE,EAAOvE,SAASC,cAAc,QACpCsE,EAAKnE,aAAa,SAAU,UAC5BwD,EAAOnD,YAAY8D,GAGnB,MAAMgV,EAAavZ,SAASC,cAAc,SAC1CsZ,EAAWjZ,YAAc,eACzBiZ,EAAWnZ,aAAa,MAAO,SAC/BmE,EAAK9D,YAAY8Y,GAEjB,MAAMC,EAAaxZ,SAASC,cAAc,SAC1CuZ,EAAWpZ,aAAa,OAAQ,QAChCoZ,EAAWpZ,aAAa,KAAM,SAC9BoZ,EAAWpZ,aAAa,OAAQ,SAChCoZ,EAAW9U,UAAW,EACtBH,EAAK9D,YAAY+Y,GAIjB,MAAMC,EAAmBzZ,SAASC,cAAc,SAChDwZ,EAAiBnZ,YAAc,qBAC/BmZ,EAAiBrZ,aAAa,MAAO,eACrCmE,EAAK9D,YAAYgZ,GAEjB,MAAMC,EAAsB1Z,SAASC,cAAc,YACnDyZ,EAAoBtZ,aAAa,KAAM,eACvCsZ,EAAoBtZ,aAAa,YAAa,OAC9CsZ,EAAoBtZ,aAAa,OAAQ,eACzCsZ,EAAoBtZ,aAAa,OAAQ,KACzCmE,EAAK9D,YAAYiZ,GAGjB,MAAMC,EAAY3Z,SAASC,cAAc,SACzC0Z,EAAUrZ,YAAc,YACxBqZ,EAAUvZ,aAAa,MAAO,QAC9BmE,EAAK9D,YAAYkZ,GAEjB,MAAMC,EAAY5Z,SAASC,cAAc,SACzC2Z,EAAUxZ,aAAa,OAAQ,QAC/BwZ,EAAUxZ,aAAa,KAAM,QAC7BwZ,EAAUxZ,aAAa,OAAQ,QAC/BwZ,EAAUlV,UAAW,EACrBH,EAAK9D,YAAYmZ,GAKjB,MAAMC,EAAgB7Z,SAASC,cAAc,SAC7C4Z,EAAcvZ,YAAc,uBAC5BuZ,EAAczZ,aAAa,MAAO,YAClCmE,EAAK9D,YAAYoZ,GAEjB,MAAMC,EAAiB9Z,SAASC,cAAc,UAC9C6Z,EAAe1Z,aAAa,KAAM,YAClC0Z,EAAe1Z,aAAa,OAAQ,YACpC0Z,EAAepV,UAAW,EAE1B,MAAMqV,EAAe/Z,SAASC,cAAc,UAC5C8Z,EAAazZ,YAAc,mBAC3ByZ,EAAa7U,MAAQ,GACrB4U,EAAerZ,YAAYsZ,GAE3B,MAAMC,EAAaha,SAASC,cAAc,UAC1C+Z,EAAW1Z,YAAc,gBACzB0Z,EAAW5Z,aAAa,QAAS,QACjC0Z,EAAerZ,YAAYuZ,GAE3B,MAAMC,EAAeja,SAASC,cAAc,UAC5Cga,EAAa3Z,YAAc,kBAC3B2Z,EAAa7Z,aAAa,QAAS,UACnC0Z,EAAerZ,YAAYwZ,GAE3B,MAAMC,EAAYla,SAASC,cAAc,UACzCia,EAAU5Z,YAAc,eACxB4Z,EAAU9Z,aAAa,QAAS,OAChC0Z,EAAerZ,YAAYyZ,GAE3B3V,EAAK9D,YAAYqZ,GAIjB,MAAMK,EAAoBna,SAASC,cAAc,SACjDka,EAAkB/Z,aAAa,OAAQ,YACvC+Z,EAAkB/Z,aAAa,KAAM,aACrC+Z,EAAkB/Z,aAAa,OAAQ,aAEvC,MAAMga,EAAiBpa,SAASC,cAAc,SAC9Cma,EAAeha,aAAa,MAAO,aACnCga,EAAe9Z,YAAc,oBAE7BiE,EAAK9D,YAAY0Z,GACjB5V,EAAK9D,YAAY2Z,GAIjB,MAAMzV,EAAe3E,SAASC,cAAc,UAC5C0E,EAAarE,YAAc,SAC3BqE,EAAazE,UAAUC,IAAI,gBAC3BoE,EAAK9D,YAAYkE,GAEjB,MAAMC,EAAe5E,SAASC,cAAc,UAM5C,OALA2E,EAAatE,YAAc,SAC3BsE,EAAa1E,UAAUC,IAAI,gBAC3BoE,EAAK9D,YAAYmE,GAGVhB,CAEX,CDlFsByW,GACdra,SAAS8E,KAAKrE,YAAY7D,KAAKgH,QAI/BhH,KAAKwc,iBAAmBjV,EAAMC,OAAOkW,cAAcC,aAAa,cAChE3d,KAAKyc,wBAA0BlV,EAAMC,OAAOkW,cAAcxX,cAAc,mBAGxElG,KAAKmI,4BAGLnI,KAAKgH,OAAOoB,WAEhB,CAGA,yBAAAD,GAEI,MAAMJ,EAAe/H,KAAKgH,OAAOd,cAAc,iBACzC8B,EAAehI,KAAKgH,OAAOd,cAAc,iBAE/C6B,EAAaT,iBAAiB,QAAStH,KAAKmH,mBAC5Ca,EAAaV,iBAAiB,QAAStH,KAAKoH,mBAG5CpH,KAAKgH,OAAOM,iBAAiB,WAAYC,IACnB,WAAdA,EAAMc,KACNrI,KAAKoH,mBACT,GAGR,CAGA,iBAAAD,CAAkBI,GAEd,MAAM/G,EAAWR,KAAK4d,YAAYrW,GAElC,GAAI/G,EAAU,CAGV,IAEIU,EAFUlB,KAAK+G,kBAAkBxG,QAAQC,EAAUR,KAAKwc,kBAEvCzb,GAGrBf,KAAK6d,UAAUrd,EAAUU,EAAQlB,KAAKyc,yBAGtCzc,KAAKyI,eAET,MACIzI,KAAK8d,UAAU,qCAGvB,CAEA,iBAAA1W,GACIpH,KAAKyI,eACT,CAGA,WAAAmV,CAAYrW,GAERA,EAAMwW,iBAEN,MAAMpW,EAAO3H,KAAKgH,OAAOd,cAAc,QACjC8X,EAAW,IAAIC,SAAStW,GAExBhI,EAAQqe,EAASE,IAAI,SACrBte,EAAcoe,EAASE,IAAI,gBAAkB,GAEnD,IAAIC,EAAgBH,EAASE,IAAI,QAEjC,MAAMpe,EAAWke,EAASE,IAAI,YACxBpd,EAAckd,EAASE,IAAI,aAKjC,IAAKve,IAAUG,EACX,OAAO,KAIX,MAAMD,EAAUuc,GAAa+B,GAC7B,OAAKte,EAIE,CAAEF,QAAOC,cAAaC,UAASC,WAAUgB,eAHrC,IAKf,CAGA,SAAA+c,CAAUrd,EAAUU,EAAQyC,GAExB,MAAMwC,EAAcrC,EAAkBtD,EAAUU,GAChDyC,EAAeE,YAAYsC,EAE/B,CAGA,aAAAsC,GAEI,GAAIzI,KAAKgH,OAAQ,CACb,MAAMW,EAAO3H,KAAKgH,OAAOd,cAAc,QACnCyB,GAAMA,EAAKe,QAEf1I,KAAKgH,OAAO2B,QACZ3I,KAAKgH,OAAO1B,SACZtF,KAAKgH,OAAS,IAClB,CAGAhH,KAAKwc,iBAAmB,KACxBxc,KAAKyc,wBAA0B,IAEnC,CAGA,SAAAqB,CAAUhN,GAGNtI,MAAMsI,EAEV,CAIA,OAAAsN,GAEQpe,KAAKgH,QACLhH,KAAKgH,OAAO1B,QAGpB,EEjLJ,MAAM+Y,GAEF,WAAA3e,CAAYqH,GAER/G,KAAK+G,kBAAoBA,CAE7B,CAEA,UAAAtB,GAEIzF,KAAKqH,sBAET,CAEA,oBAAAA,GAEIjE,SAASkE,iBAAiB,SAAUC,IAE5BA,EAAMC,OAAOlE,UAAUmE,SAAS,gBAEhCzH,KAAKse,sBAAsB/W,EAE/B,GAGR,CAEA,qBAAA+W,CAAsB/W,GAIlBpF,QAAQC,IAAImF,GACZ,MAAMgX,EAAWhX,EAAMC,OAAOkW,cAAcA,cACtC/Z,EAAiB4a,EAASb,cAE1Bxc,EAASqd,EAASZ,aAAa,WAC/BnX,EAAY7C,EAAe+Z,cAAcC,aAAa,cAE5D3d,KAAK+G,kBAAkB9F,WAAWC,EAAQsF,GAI1C7C,EAAe6a,YAAYD,EAE/B,ECvCJ,MAAME,GAEF,WAAA/e,CAAYqH,GAER/G,KAAK+G,kBAAoBA,EACzB/G,KAAKgH,OAAS,KACdhH,KAAK0e,gBAAkB,KACvB1e,KAAK2e,kBAAoB,KACzB3e,KAAKwc,iBAAmB,KACxBxc,KAAKyc,wBAA0B,KAG/Bzc,KAAK4e,gBAAkB5e,KAAK4e,gBAAgB1X,KAAKlH,MACjDA,KAAKoH,kBAAoBpH,KAAKoH,kBAAkBF,KAAKlH,KAEzD,CAEA,UAAAyF,GAEIzF,KAAKqH,sBAET,CAEA,oBAAAA,GAEIjE,SAASkE,iBAAiB,SAAUC,IAE5BA,EAAMC,OAAOlE,UAAUmE,SAAS,cAEhCzH,KAAK6e,oBAAoBtX,EAE7B,GAIR,CAGA,mBAAAsX,CAAoBtX,GAEhB,MAAMgX,EAAWhX,EAAMC,OAAOkW,cAAcA,cACzC/Z,EAAiB4a,EAASb,cAEvBxc,EAASqd,EAASZ,aAAa,WAC/BnX,EAAY7C,EAAe+Z,cAAcC,aAAa,cAE5D3d,KAAK0e,gBAAkBH,EACvBve,KAAK2e,kBAAoBzd,EACzBlB,KAAKwc,iBAAmBhW,EACxBxG,KAAKyc,wBAA0B9Y,EAE/B3D,KAAKgH,OCxDN,WAGH,MAAMA,EAAS5D,SAASC,cAAc,UAGhCqE,EAAKtE,SAASC,cAAc,MAClCqE,EAAGhE,YAAc,kBACjBsD,EAAOnD,YAAY6D,GACnBV,EAAO1D,UAAUC,IAAI,iBAGrB,MAAMoE,EAAOvE,SAASC,cAAc,QACpCsE,EAAKnE,aAAa,SAAU,UAC5BwD,EAAOnD,YAAY8D,GAGnB,MAAMgV,EAAavZ,SAASC,cAAc,SAC1CsZ,EAAWjZ,YAAc,mBACzBiZ,EAAWnZ,aAAa,MAAO,SAC/BmE,EAAK9D,YAAY8Y,GAEjB,MAAMC,EAAaxZ,SAASC,cAAc,SAC1CuZ,EAAWpZ,aAAa,OAAQ,QAChCoZ,EAAWpZ,aAAa,KAAM,SAC9BoZ,EAAWpZ,aAAa,OAAQ,SAChCoZ,EAAW9U,UAAW,EACtBH,EAAK9D,YAAY+Y,GAIjB,MAAMC,EAAmBzZ,SAASC,cAAc,SAChDwZ,EAAiBnZ,YAAc,yBAC/BmZ,EAAiBrZ,aAAa,MAAO,eACrCmE,EAAK9D,YAAYgZ,GAEjB,MAAMC,EAAsB1Z,SAASC,cAAc,YACnDyZ,EAAoBtZ,aAAa,KAAM,eACvCsZ,EAAoBtZ,aAAa,YAAa,OAC9CsZ,EAAoBtZ,aAAa,OAAQ,eACzCsZ,EAAoBtZ,aAAa,OAAQ,KACzCmE,EAAK9D,YAAYiZ,GAGjB,MAAMC,EAAY3Z,SAASC,cAAc,SACzC0Z,EAAUrZ,YAAc,sBACxBqZ,EAAUvZ,aAAa,MAAO,QAC9BmE,EAAK9D,YAAYkZ,GAEjB,MAAMC,EAAY5Z,SAASC,cAAc,SACzC2Z,EAAUxZ,aAAa,OAAQ,QAC/BwZ,EAAUxZ,aAAa,KAAM,QAC7BwZ,EAAUxZ,aAAa,OAAQ,QAC/BwZ,EAAUlV,UAAW,EACrBH,EAAK9D,YAAYmZ,GAKjB,MAAMC,EAAgB7Z,SAASC,cAAc,SAC7C4Z,EAAcvZ,YAAc,2BAC5BuZ,EAAczZ,aAAa,MAAO,YAClCmE,EAAK9D,YAAYoZ,GAEjB,MAAMC,EAAiB9Z,SAASC,cAAc,UAC9C6Z,EAAe1Z,aAAa,KAAM,YAClC0Z,EAAe1Z,aAAa,OAAQ,YACpC0Z,EAAepV,UAAW,EAE1B,MAAMqV,EAAe/Z,SAASC,cAAc,UAC5C8Z,EAAazZ,YAAc,mBAC3ByZ,EAAa7U,MAAQ,GACrB4U,EAAerZ,YAAYsZ,GAE3B,MAAMC,EAAaha,SAASC,cAAc,UAC1C+Z,EAAW1Z,YAAc,gBACzB0Z,EAAW5Z,aAAa,QAAS,QACjC0Z,EAAerZ,YAAYuZ,GAE3B,MAAMC,EAAeja,SAASC,cAAc,UAC5Cga,EAAa3Z,YAAc,kBAC3B2Z,EAAa7Z,aAAa,QAAS,UACnC0Z,EAAerZ,YAAYwZ,GAE3B,MAAMC,EAAYla,SAASC,cAAc,UACzCia,EAAU5Z,YAAc,eACxB4Z,EAAU9Z,aAAa,QAAS,OAChC0Z,EAAerZ,YAAYyZ,GAE3B3V,EAAK9D,YAAYqZ,GAGjB,MAAMnV,EAAe3E,SAASC,cAAc,UAC5C0E,EAAarE,YAAc,SAC3BqE,EAAazE,UAAUC,IAAI,gBAC3BoE,EAAK9D,YAAYkE,GAEjB,MAAMC,EAAe5E,SAASC,cAAc,UAM5C,OALA2E,EAAatE,YAAc,SAC3BsE,EAAa1E,UAAUC,IAAI,gBAC3BoE,EAAK9D,YAAYmE,GAGVhB,CAEX,CDjDsB8X,GACd1b,SAAS8E,KAAKrE,YAAY7D,KAAKgH,QAG/BhH,KAAKmI,4BAGLnI,KAAKgH,OAAOoB,WAEhB,CAGA,yBAAAD,GAEI,MAAMJ,EAAe/H,KAAKgH,OAAOd,cAAc,iBACzC8B,EAAehI,KAAKgH,OAAOd,cAAc,iBAE/C6B,EAAaT,iBAAiB,QAAStH,KAAK4e,iBAC5C5W,EAAaV,iBAAiB,QAAStH,KAAKoH,mBAG5CpH,KAAKgH,OAAOM,iBAAiB,WAAYC,IACnB,WAAdA,EAAMc,KACNrI,KAAKoH,mBACT,GAGR,CAGA,eAAA2X,CAAgBxX,GAEZA,EAAMwW,iBAEN,MAAMpW,EAAO3H,KAAKgH,OAAOd,cAAc,QACjC8X,EAAW,IAAIC,SAAStW,GAExBhI,EAAQqe,EAASE,IAAI,SACrBte,EAAcoe,EAASE,IAAI,gBAAkB,GAEnD,IAAIC,EAAgBH,EAASE,IAAI,QAEjC,MAAMpe,EAAWke,EAASE,IAAI,YAIxBre,EAAUuc,GAAa+B,GAE7B,OAAKxe,GAAUG,GAAaD,EAIrB,CAAEF,QAAOC,cAAaC,UAASC,YAH3B,IAKf,CAGA,eAAA8e,CAAgBrX,GAEZ,MAAM9F,EAAezB,KAAK+e,gBAAgBxX,GAG1C,GAAI9F,EAAc,CAId,IAAIud,EAAchf,KAAK+G,kBAAkB7G,SAASuB,EAAczB,KAAK2e,kBAAmB3e,KAAKwc,kBAE7Fxc,KAAK0e,gBAAgBpZ,SAErBtF,KAAK6d,UAAUmB,EAAaA,EAAYje,GAAIf,KAAKyc,yBAIjDzc,KAAKyI,eACT,MAGIzI,KAAK8d,UAAU,oCAGvB,CAGA,SAAAD,CAAUrd,EAAUU,EAAQyC,GAExB,MAAMwC,EAAcrC,EAAkBtD,EAAUU,GAChDyC,EAAeE,YAAYsC,EAE/B,CAGA,iBAAAiB,GACIpH,KAAKyI,eACT,CAGA,aAAAA,GAEI,GAAIzI,KAAKgH,OAAQ,CACb,MAAMW,EAAO3H,KAAKgH,OAAOd,cAAc,QACnCyB,GAAMA,EAAKe,QAEf1I,KAAKgH,OAAO2B,QACZ3I,KAAKgH,OAAO1B,SACZtF,KAAKgH,OAAS,IAClB,CAGAhH,KAAK0e,gBAAkB,KACvB1e,KAAK2e,kBAAoB,KACzB3e,KAAKwc,iBAAmB,KACxBxc,KAAKyc,wBAA0B,KAC/Bzc,KAAKwc,iBAAmB,IAE5B,CAGA,SAAAsB,CAAUhN,GAGNtI,MAAMsI,EAEV,CAIA,OAAAsN,GAEQpe,KAAKgH,QACLhH,KAAKgH,OAAO1B,QAGpB,EE7LJ,MAAM2Z,GAEF,WAAAvf,CAAaqH,GAET/G,KAAK+G,kBAAoBA,CAE7B,CAEA,UAAAtB,GAEIzF,KAAKqH,sBAET,CAEA,oBAAAA,GAEIjE,SAASkE,iBAAiB,SAAUC,IAE5BA,EAAMC,OAAOlE,UAAUmE,SAAS,kBAEhCzH,KAAKkf,wBAAwB3X,EAEjC,GAGR,CAGA,uBAAA2X,CAAwB3X,GAEpB,IAAIoE,EAIJ,MAAM4S,EAAWhX,EAAMC,OAAOkW,cAAcA,cACtC/Z,EAAiB4a,EAASb,cAE1Bxc,EAASqd,EAASZ,aAAa,WAC/BnX,EAAY7C,EAAe+Z,cAAcC,aAAa,cAM7ChS,EAJI3L,KAAK+G,kBAAkBxF,aAAaL,EAAQsF,GAIvC,iBAA4B,gBAEpD+X,EAASrY,cAAc,iBAAiBxC,YAAciI,CAE1D,EC1CJ,MAAMwT,GAEF,WAAAzf,CAAYqH,GAER/G,KAAK+G,kBAAoBA,CAE7B,CAEA,UAAAtB,GAEwB,IAAIqB,EAAY9G,KAAK+G,mBAC7BtB,aAEK,IAAI8W,GAASvc,KAAK+G,mBAC1BtB,aAEW,IAAI4Y,GAAYre,KAAK+G,mBAC7BtB,aAEM,IAAIgZ,GAAUze,KAAK+G,mBAC3BtB,aAEY,IAAIwZ,GAAcjf,KAAK+G,mBAC/BtB,YAElB,ECnBJrC,SAASkE,iBAAiB,oBAAoB,KA2C9C,IAAmCP,GA9BnC,WAEI,MAAMmB,EAAO9E,SAAS8C,cAAc,QAG9BkZ,EC3BH,WAEH,MAAMC,ECDH,WAEH,MAAMA,EAAOjc,SAASC,cAAc,OACpCgc,EAAK/b,UAAUC,IAAI,QAEnB,MAAM+b,EAAKlc,SAASC,cAAc,MAClCic,EAAG5b,YAAc,4BAEjB,MAAME,EAASR,SAASC,cAAc,UAQtC,OAPAO,EAAOF,YAAc,uBACrBE,EAAON,UAAUC,IAAI,uBAGrB8b,EAAKxb,YAAYyb,GACjBD,EAAKxb,YAAYD,GAEVyb,CAEX,CDjBiBE,GACP7Z,EENH,WAEH,MAAMA,EAAgBtC,SAASC,cAAc,OAG7C,OAFAqC,EAAcpC,UAAUC,IAAI,iBAErBmC,CAEX,CFD0B8Z,GAEhBC,EAAYrc,SAASC,cAAc,QAMzC,OALAoc,EAAUnc,UAAUC,IAAI,gBAExBkc,EAAU5b,YAAYwb,GACtBI,EAAU5b,YAAY6B,GAEf+Z,CAEX,CDcwBC,GACpBxX,EAAKrE,YAAYub,GAGjB,MAAMO,EIhCH,WAEH,MAAMA,EAASvc,SAASC,cAAc,UAEhC0M,EAAI3M,SAASC,cAAc,KAKjC,OAJA0M,EAAErM,YAAc,2DAEhBic,EAAO9b,YAAYkM,GAEZ4P,CAEX,CJqBmBC,GACf1X,EAAKrE,YAAY8b,EAErB,CAvBIE,GAyC+B9Y,EAfnC,WAEI,MAAMrB,EAAgBtC,SAAS8C,cAAc,kBAGvCa,EAAoB,IAAIxB,EAAW,IAKzC,OAFAwB,EAAkBtB,WAAWC,GAEtBqB,CAEX,CAnC8B+Y,GAwCR,IAAIX,GAAUpY,GACtBtB,YAtCkC,G","sources":["webpack://development/./src/modules/logic/todo.js","webpack://development/./src/modules/logic/project.js","webpack://development/./src/modules/logic/storageManager.js","webpack://development/./src/modules/views/components/createIUProject.js","webpack://development/./src/modules/views/components/createIUTodoElement.js","webpack://development/./src/modules/logic/formatDate.js","webpack://development/./src/modules/controllers/controller.js","webpack://development/./src/modules/views/boundary/IAddProject.js","webpack://development/./src/modules/views/components/createProjectDialog.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://development/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://development/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://development/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://development/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://development/./node_modules/date-fns/locale/en-US.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://development/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://development/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://development/./node_modules/date-fns/_lib/protectedTokens.js","webpack://development/./node_modules/date-fns/constants.js","webpack://development/./node_modules/date-fns/constructFrom.js","webpack://development/./node_modules/date-fns/_lib/defaultOptions.js","webpack://development/./node_modules/date-fns/toDate.js","webpack://development/./node_modules/date-fns/parse/_lib/Setter.js","webpack://development/./node_modules/date-fns/transpose.js","webpack://development/./node_modules/date-fns/parse/_lib/Parser.js","webpack://development/./node_modules/date-fns/parse/_lib/constants.js","webpack://development/./node_modules/date-fns/parse/_lib/utils.js","webpack://development/./node_modules/date-fns/startOfWeek.js","webpack://development/./node_modules/date-fns/getWeekYear.js","webpack://development/./node_modules/date-fns/startOfISOWeek.js","webpack://development/./node_modules/date-fns/getWeek.js","webpack://development/./node_modules/date-fns/startOfWeekYear.js","webpack://development/./node_modules/date-fns/startOfISOWeekYear.js","webpack://development/./node_modules/date-fns/getISOWeekYear.js","webpack://development/./node_modules/date-fns/setISOWeek.js","webpack://development/./node_modules/date-fns/getISOWeek.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/DateParser.js","webpack://development/./node_modules/date-fns/addDays.js","webpack://development/./node_modules/date-fns/setDay.js","webpack://development/./node_modules/date-fns/setISODay.js","webpack://development/./node_modules/date-fns/getISODay.js","webpack://development/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/EraParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/YearParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/QuarterParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/MonthParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js","webpack://development/./node_modules/date-fns/setWeek.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/DayParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/ISODayParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/AMPMParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/MinuteParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/SecondParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js","webpack://development/./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js","webpack://development/./node_modules/date-fns/parse.js","webpack://development/./node_modules/date-fns/getDefaultOptions.js","webpack://development/./node_modules/date-fns/isValid.js","webpack://development/./node_modules/date-fns/isDate.js","webpack://development/./src/modules/logic/validateDate.js","webpack://development/./src/modules/views/boundary/IAddTodo.js","webpack://development/./src/modules/views/components/dialog.js","webpack://development/./src/modules/views/boundary/IDeleteTodo.js","webpack://development/./src/modules/views/boundary/IEditTodo.js","webpack://development/./src/modules/views/components/createEditDialog.js","webpack://development/./src/modules/views/boundary/ICompleteTodo.js","webpack://development/./src/modules/views/boundary/IBoundary.js","webpack://development/./src/index.js","webpack://development/./src/modules/views/components/landing.js","webpack://development/./src/modules/views/components/hero.js","webpack://development/./src/modules/views/components/cardGrid.js","webpack://development/./src/modules/views/components/footer.js"],"sourcesContent":["class Todo {\n\n    constructor(title, description, dueDate, priority, checklist) {\n        this.title = title; //String\n        this.description = description; //String\n        this.dueDate = dueDate; //Date\n        this.priority = priority; //String\n        this.checklist = checklist; //Boolean\n    }\n\n    toggleChecklistState () {\n\n        if (!this.checklist) {\n\n            this.checklist = true;\n\n        }   \n\n        else {\n            this.checklist = false;\n        }\n\n        return this.checklist;\n    }\n\n    editTodo(newData) {\n\n        this.title = newData.title;\n        this.description = newData.description;\n        this.dueDate = newData.dueDate;\n        this.priority = newData.priority;\n\n        return this;\n\n    }\n}\n\nexport {Todo};","import {Todo} from './todo.js';\n\n\nclass Project {\n\n    //Las propiedades del proyecto por ahora son su nombre:String y la lista de todos que posee todosList:Array\n\n    constructor(name, todosList) {\n        this.name = name;\n        this.todosList = todosList;\n    }\n\n\n    addTodo(todoData) {\n\n        let uuid = self.crypto.randomUUID();\n\n        const newTodo = new Todo(todoData.title, todoData.description, todoData.dueDate, todoData.priority, todoData.isCompleted);\n\n        newTodo.id = uuid;\n\n        this.todosList.push(newTodo);\n\n        return newTodo;\n\n    }\n\n    \n    deleteTodo(todoId) {\n\n        //Buscar en el array de todosList:Array iterando sobre cada uno de los ToDos del proyecto filtrado por id previamente por el gestor (metodo iterativo sobre los proyectos). Luego que se envía el mensaje al objeto proyecto que coincide con el id del proyecto que fue clickeado.\n\n        let selectedTodoIndex = this.todosList.findIndex( (todo) => todo.id === todoId );\n        \n        this.todosList.splice(selectedTodoIndex, 1);\n\n    }\n\n\n    completeTodo(todoId) {\n\n        let selectedTodo = this.todosList.find( (todo) => \n        todo.id === todoId);\n\n        let checklistRes = selectedTodo.toggleChecklistState();\n\n        return checklistRes;\n\n    }\n\n\n    editTodo(editTodoData, todoId) {\n\n        let selectedTodo = this.todosList.find( (todo) => todo.id === todoId);\n\n        let res = selectedTodo.editTodo(editTodoData);\n\n        return res;\n        \n    }\n\n}\n\nexport {Project};","class StorageManager {\n    \n    constructor() {\n        // Clave principal bajo la cual se almacenan todos los proyectos\n        this.PROJECTS_KEY = 'todoApp_projects';\n    }\n\n    saveProjects(projects) {\n        try {\n            // Convertir el array de proyectos a JSON string\n            const projectsJSON = JSON.stringify(projects);\n            \n            // Guardar en Local Storage\n            localStorage.setItem(this.PROJECTS_KEY, projectsJSON);\n            \n            console.log('Proyectos guardados exitosamente en Local Storage');\n        } catch (error) {\n            console.error('Error al guardar proyectos:', error);\n        }\n    }\n\n\n    loadProjects() {\n        try {\n            // Intentar obtener los datos de Local Storage\n            const projectsJSON = localStorage.getItem(this.PROJECTS_KEY);\n            \n            // Si no hay datos guardados, retornar array vacío\n            if (!projectsJSON) {\n                console.log('No hay proyectos guardados en Local Storage');\n                return [];\n            }\n            \n            // Convertir el JSON string de vuelta a array de objetos\n            const projects = JSON.parse(projectsJSON);\n            \n            console.log('Proyectos cargados desde Local Storage:', projects);\n            return projects;\n            \n        } catch (error) {\n            console.error('Error al cargar proyectos:', error);\n            return [];\n        }\n    }\n\n\n    clearProjects() {\n        try {\n            localStorage.removeItem(this.PROJECTS_KEY);\n            console.log('Proyectos eliminados de Local Storage');\n        } catch (error) {\n            console.error('Error al eliminar proyectos:', error);\n        }\n    }\n\n\n    hasStoredProjects() {\n        const projectsJSON = localStorage.getItem(this.PROJECTS_KEY);\n        return projectsJSON !== null && projectsJSON !== undefined;\n    }\n\n    \n    getStorageInfo() {\n        try {\n            const projectsJSON = localStorage.getItem(this.PROJECTS_KEY);\n            \n            return {\n                hasData: projectsJSON !== null,\n                dataSize: projectsJSON ? projectsJSON.length : 0,\n                projectCount: projectsJSON ? JSON.parse(projectsJSON).length : 0\n            };\n        } catch (error) {\n            console.error('Error al obtener información del storage:', error);\n            return {\n                hasData: false,\n                dataSize: 0,\n                projectCount: 0\n            };\n        }\n    }\n}\n\nexport { StorageManager };","export function createIUProject(project) { \n\n    const projectDiv = document.createElement('div');\n    projectDiv.classList.add('project');\n    projectDiv.setAttribute('project-id', project.id);\n\n    const projectName = document.createElement('h3');\n    projectName.textContent = project.name;\n\n    const todosContainer = document.createElement('div');\n    todosContainer.classList.add('todosContainer');\n\n    const button = document.createElement('button');\n    button.textContent = 'Add To-do';\n    button.classList.add('add-todo');\n    \n    projectDiv.appendChild(projectName);\n    projectDiv.appendChild(button);\n    projectDiv.appendChild(todosContainer);\n\n    return projectDiv;\n\n}\n\n","import { formatDate } from '../../logic/formatDate.js';\n\nexport function createTodoElement(todoData, todoId) {\n\n    // Crear el contenedor principal\n    const todoDiv = document.createElement('div');\n    todoDiv.className = 'todo-item new';\n    todoDiv.setAttribute('todo-id', todoId);\n    \n    // Si está completado, añadir la clase correspondiente\n    if (todoData.isCompleted === 'on') {\n        todoDiv.classList.add('completed');\n    }\n    \n    // Crear los elementos de información\n    const title = document.createElement('h4');\n    title.textContent = todoData.title;\n    title.className = 'todo-title';\n    \n    const description = document.createElement('p');\n    description.textContent = todoData.description;\n    description.className = 'todo-description';\n    \n    const dueDate = document.createElement('p');\n    dueDate.textContent = `Due: ${formatDate(todoData.dueDate)}`;\n    dueDate.className = 'todo-date';\n    \n    const priority = document.createElement('p');\n    priority.textContent = `Priority: ${todoData.priority}`;\n    priority.className = 'todo-priority';\n    priority.dataset.priority = todoData.priority.toLowerCase();\n    \n    const status = document.createElement('p');\n\n    let statusText = todoData.isCompleted !== null ? 'Yes' : 'No'; \n    status.textContent = `Completed: ${statusText}`;\n    status.className = 'todo-status';\n    status.dataset.completed = todoData.isCompleted;\n\n    \n    // Crear contenedor para los botones\n    const actionsDiv = document.createElement('div');\n    actionsDiv.className = 'todo-actions';\n    \n    // Crear botones\n    const deleteBtn = document.createElement('button');\n    deleteBtn.textContent = 'Delete To-do';\n    deleteBtn.className = 'delete-todo';\n    \n    const completeBtn = document.createElement('button');\n    completeBtn.textContent = 'Completed';\n    completeBtn.className = 'complete-todo';\n    \n    const editBtn = document.createElement('button');\n    editBtn.textContent = 'Edit To-do';\n    editBtn.className = 'edit-todo';\n    \n    // Añadir botones al contenedor de acciones\n    actionsDiv.appendChild(deleteBtn);\n    actionsDiv.appendChild(completeBtn);\n    actionsDiv.appendChild(editBtn);\n    \n    // Añadir todos los elementos al contenedor principal\n    todoDiv.appendChild(title);\n    todoDiv.appendChild(description);\n    todoDiv.appendChild(dueDate);\n    todoDiv.appendChild(priority);\n    todoDiv.appendChild(status);\n    todoDiv.appendChild(actionsDiv);\n    \n    // Eliminar la clase 'new' después de la animación\n    setTimeout(() => {\n        todoDiv.classList.remove('new');\n    }, 500);\n\n    return todoDiv;\n    \n}","// Método auxiliar para formatear fechas\nexport function formatDate(dateString) {\n\n    if (!dateString) return 'No date';\n    \n    try {\n        const date = new Date(dateString);\n        if (isNaN(date.getTime())) return dateString;\n        \n        return date.toLocaleDateString('es-ES', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n        });\n    } catch (e) {\n        return dateString;\n    }\n    \n}","import { Project } from '../logic/project.js';\nimport { Todo } from '../logic/todo.js';\nimport { StorageManager } from '../logic/storageManager.js';\nimport { createIUProject } from '../views/components/createIUProject.js';\nimport { createTodoElement } from '../views/components/createIUTodoElement.js';\n\nclass Controller {\n\n    constructor(projects) {\n        this.projects = projects;\n        // Crear instancia del gestor de almacenamiento\n        this.storageManager = new StorageManager();\n    }\n\n    initialize(gridContainer) {\n        // Primero intentar cargar proyectos existentes desde Local Storage\n        this.loadProjectsFromStorage(gridContainer);\n        \n        // Si no hay proyectos guardados, crear el proyecto por defecto\n        if (this.projects.length === 0) {\n            let defaultProject = this.createProject('Default Project');\n            const iuNewProject = createIUProject(defaultProject);\n            gridContainer.appendChild(iuNewProject);\n        }\n    }\n\n\n    loadProjectsFromStorage(gridContainer) {\n        try {\n            // Obtener datos planos desde Local Storage\n            const storedProjectsData = this.storageManager.loadProjects();\n            \n            // Reconstruir cada proyecto y sus todos\n            storedProjectsData.forEach(projectData => {\n                // Crear instancia de Project\n                const project = new Project(projectData.name, []);\n                project.id = projectData.id;\n                \n                // Reconstruir todos los todos del proyecto\n                if (projectData.todosList && projectData.todosList.length > 0) {\n                    projectData.todosList.forEach(todoData => {\n                        // Crear instancia de Todo\n                        const todo = new Todo(\n                            todoData.title,\n                            todoData.description,\n                            todoData.dueDate,\n                            todoData.priority,\n                            todoData.checklist\n                        );\n                        todo.id = todoData.id;\n                        \n                        // Agregar el todo al proyecto\n                        project.todosList.push(todo);\n                    });\n                }\n                \n                // Agregar el proyecto reconstruido al array\n                this.projects.push(project);\n                \n                // Crear y mostrar la interfaz del proyecto\n                const iuProject = createIUProject(project);\n                gridContainer.appendChild(iuProject);\n                \n                // Mostrar todos los todos en la interfaz\n                const todosContainer = iuProject.querySelector('.todosContainer');\n                project.todosList.forEach(todo => {\n                    const todoElement = createTodoElement(todo, todo.id);\n                    todosContainer.appendChild(todoElement);\n                });\n            });\n            \n            console.log(`Cargados ${storedProjectsData.length} proyectos desde Local Storage`);\n            \n        } catch (error) {\n            console.error('Error al cargar proyectos desde Local Storage:', error);\n        }\n    }\n\n \n    saveProjectsToStorage() {\n        try {\n            this.storageManager.saveProjects(this.projects);\n        } catch (error) {\n            console.error('Error al guardar proyectos:', error);\n        }\n    }\n\n    createProject(projectName) {\n        // Agregar comprobación de que no haya un proyecto con el mismo nombre\n        const existingProject = this.projects.find(project => project.name === projectName);\n        if (existingProject) {\n            console.warn(`Ya existe un proyecto con el nombre: ${projectName}`);\n            return null;\n        }\n\n        const newProject = new Project(projectName, []);\n        let projectUUID = self.crypto.randomUUID();\n        newProject.id = projectUUID;\n        \n        this.projects.push(newProject);\n        \n        // Guardar en Local Storage después de crear el proyecto\n        this.saveProjectsToStorage();\n        \n        return newProject;\n    }\n\n\n    addTodo(todoData, projectId) {\n        let selectedProject = this.projects.find(project => project.id === projectId);\n        \n        if (!selectedProject) {\n            console.error(`No se encontró el proyecto con ID: ${projectId}`);\n            return null;\n        }\n\n        let newTodo = selectedProject.addTodo(todoData);\n        \n        // Guardar cambios en Local Storage\n        this.saveProjectsToStorage();\n        \n        return newTodo;\n    }\n\n    deleteTodo(todoId, projectId) {\n        let selectedProject = this.projects.find(project => project.id === projectId);\n        \n        if (!selectedProject) {\n            console.error(`No se encontró el proyecto con ID: ${projectId}`);\n            return;\n        }\n\n        selectedProject.deleteTodo(todoId);\n        \n        // Guardar cambios en Local Storage\n        this.saveProjectsToStorage();\n    }\n\n    completeTodo(todoId, projectId) {\n        let selectedProject = this.projects.find(project => project.id === projectId);\n        \n        if (!selectedProject) {\n            console.error(`No se encontró el proyecto con ID: ${projectId}`);\n            return null;\n        }\n\n        let checklistRes = selectedProject.completeTodo(todoId);\n        \n        // Guardar cambios en Local Storage\n        this.saveProjectsToStorage();\n        \n        return checklistRes;\n    }\n\n    editTodo(editTodoData, todoId, projectId) {\n        let selectedProject = this.projects.find(project => project.id === projectId);\n        \n        if (!selectedProject) {\n            console.error(`No se encontró el proyecto con ID: ${projectId}`);\n            return null;\n        }\n        \n        let res = selectedProject.editTodo(editTodoData, todoId);\n        \n        // Guardar cambios en Local Storage\n        this.saveProjectsToStorage();\n        \n        return res;\n    }\n\n    getProject(projectId) {\n        let selectedProject = this.projects.find(project => project.id === projectId);\n        return selectedProject;\n    }\n\n\n    clearAllData() {\n        this.storageManager.clearProjects();\n        this.projects = [];\n        console.log('Todos los datos han sido eliminados');\n    }\n\n\n    getStorageInfo() {\n        return this.storageManager.getStorageInfo();\n    }\n}\n\nexport { Controller };","import { createProjectDialog } from '../components/createProjectDialog.js';\nimport { createIUProject } from '../components/createIUProject.js';\n\nclass IAddProject {\n\n    \n    constructor(projectController) {\n\n        this.projectController = projectController;\n        this.dialog = null; \n\n        // Bind methods to preserve 'this' context\n        this.handleAddProjectClick = this.handleAddProjectClick.bind(this);\n        this.handleAcceptClick = this.handleAcceptClick.bind(this);\n        this.handleCancelClick = this.handleCancelClick.bind(this);\n\n    }\n    \n\n    initialize() {\n\n        this.attachEventListeners();\n\n    }\n\n\n    attachEventListeners() {\n\n        document.addEventListener('click', (event) => {\n\n            if (event.target.classList.contains('buttonAddNewProject')) {\n                this.handleAddProjectClick();\n            }\n\n        })\n\n    }\n\n\n    handleAddProjectClick() {\n\n        this.dialog = createProjectDialog();\n        document.body.appendChild(this.dialog);\n\n        this.setupDialogEventListeners();\n\n        this.dialog.showModal();\n\n    }\n\n\n    setupDialogEventListeners() {\n\n        const acceptButton = this.dialog.querySelector('.acceptButton');\n        const cancelButton = this.dialog.querySelector('.cancelButton');\n        \n        acceptButton.addEventListener('click', this.handleAcceptClick);\n        cancelButton.addEventListener('click', this.handleCancelClick);\n        \n        // Event listener para cerrar con ESC\n        this.dialog.addEventListener('keydown', (event) => {\n            if (event.key === 'Escape') {\n                this.handleCancelClick();\n            }\n        });\n\n    }\n\n\n    handleAcceptClick() {\n\n        const projectName = this.dialog.querySelector('input').value;\n\n        if (projectName) {\n\n            //Se agrega el proyecto al array de proyectos\n            const newProject = this.projectController.createProject(projectName);\n            const newProjectIU = createIUProject(newProject);\n            document.querySelector('.gridContainer').appendChild(newProjectIU);\n\n        }\n\n        else {\n            alert('No se ingreso nombre de proyecto correctamente');\n        }\n\n        this.resetAndClose();\n\n    }\n\n\n    handleCancelClick() {\n        this.resetAndClose();\n    }\n\n\n    resetAndClose() {\n        if (this.dialog) {\n            const form = this.dialog.querySelector('form');\n            if (form) form.reset();\n            \n            this.dialog.close();\n            this.dialog.remove();\n            this.dialog = null;\n        }\n        \n    }\n\n}\n\n\nexport { IAddProject };","export function createProjectDialog() {\n\n    const dialog = document.createElement('dialog');\n    dialog.classList.add('dialogAddProject');\n\n    const h2 = document.createElement('h2');\n    h2.textContent = 'Create a new project';\n    dialog.appendChild(h2);\n\n    //Creo el formulario que estará dentro del dialog\n    const form = document.createElement('form');\n    form.setAttribute('method', 'dialog');\n    dialog.appendChild(form);\n\n    //Creo el campo nombre del proyecto a ingresar\n    const labelName = document.createElement('label');\n    labelName.textContent = 'Project Name:';\n    labelName.setAttribute('for', 'projectName');\n    form.appendChild(labelName);\n\n    const inputName = document.createElement('input');\n    inputName.setAttribute('type', 'text');\n    inputName.setAttribute('id', 'projectName');\n    inputName.setAttribute('name', 'projectName');\n    inputName.required = true;\n    form.appendChild(inputName);\n\n    //Creacion de botones dentro del dialog\n    const acceptButton = document.createElement('button');\n    acceptButton.textContent = 'Accept';\n    acceptButton.classList.add('acceptButton')\n    form.appendChild(acceptButton);\n\n    const cancelButton = document.createElement('button');\n    cancelButton.textContent = 'Cancel';\n    cancelButton.classList.add('cancelButton');\n    form.appendChild(cancelButton);\n\n\n    return dialog;\n\n}","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { constructFrom } from \"../../constructFrom.js\";\nimport { transpose } from \"../../transpose.js\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n\n  constructor(context, reference) {\n    super();\n    this.context = context || ((date) => constructFrom(reference, date));\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, this.context));\n  }\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam InputDate - The input `Date` type derived from the passed argument.\n * @typeParam ResultDate - The result `Date` type derived from the passed constructor.\n *\n * @param date - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(date, constructor) {\n  const date_ = isConstructor(constructor)\n    ? new constructor(0)\n    : constructFrom(constructor, 0);\n  date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n  date_.setHours(\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds(),\n  );\n  return date_;\n}\n\nfunction isConstructor(constructor) {\n  return (\n    typeof constructor === \"function\" &&\n    constructor.prototype?.constructor === constructor\n  );\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.js\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.js\";\n\nimport { numericPatterns } from \"./constants.js\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { getISOWeek } from \"./getISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISOWeek} function options.\n */\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The `Date` type of the context function.\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week, options) {\n  const _date = toDate(date, options?.in);\n  const diff = getISOWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { addDays } from \"./addDays.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const date_ = toDate(date, options?.in);\n  const currentDay = date_.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.js\";\nimport { getISODay } from \"./getISODay.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISODay} function options.\n */\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday, etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day, options) {\n  const date_ = toDate(date, options?.in);\n  const currentDay = getISODay(date_, options);\n  const diff = day - currentDay;\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISODay} function options.\n */\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date, options) {\n  const day = toDate(date, options?.in).getDay();\n  return day === 0 ? 7 : day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { EraParser } from \"./parsers/EraParser.js\";\nimport { YearParser } from \"./parsers/YearParser.js\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.js\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.js\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.js\";\nimport { QuarterParser } from \"./parsers/QuarterParser.js\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.js\";\nimport { MonthParser } from \"./parsers/MonthParser.js\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.js\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.js\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.js\";\nimport { DateParser } from \"./parsers/DateParser.js\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.js\";\nimport { DayParser } from \"./parsers/DayParser.js\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.js\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.js\";\nimport { ISODayParser } from \"./parsers/ISODayParser.js\";\nimport { AMPMParser } from \"./parsers/AMPMParser.js\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.js\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.js\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.js\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.js\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.js\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.js\";\nimport { MinuteParser } from \"./parsers/MinuteParser.js\";\nimport { SecondParser } from \"./parsers/SecondParser.js\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.js\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.js\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.js\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.js\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.js\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.js\";\n\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.js\";\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const date_ = toDate(date, options?.in);\n  const diff = getWeek(date_, options) - week;\n  date_.setDate(date_.getDate() - diff * 7);\n  return toDate(date_, options?.in);\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.js\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getDefaultOptions } from \"./getDefaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\nimport { DateTimezoneSetter } from \"./parse/_lib/Setter.js\";\nimport { parsers } from \"./parse/_lib/parsers.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangeably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const invalidDate = () => constructFrom(options?.in || referenceDate, NaN);\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (!formatStr)\n    return dateStr ? invalidDate() : toDate(referenceDate, options?.in);\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will try to use the context or\n  // the reference date and fallback to the system time zone.\n  const setters = [new DateTimezoneSetter(options?.in, referenceDate)];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return invalidDate();\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return invalidDate();\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return invalidDate();\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate, options?.in);\n\n  if (isNaN(+date)) return invalidDate();\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return invalidDate();\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return date;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.js\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isValid, parse } from 'date-fns';\n\nexport function validateDate(dateString) {\n\n    if (!dateString || dateString.trim() === '') {\n        return null;\n    }\n    // Para input HTML date, el formato yyyy-MM-dd es válido para Date()\n\n    const parsedDate = parse(dateString, 'yyyy-MM-dd', new Date());\n\n    if (!isValid(parsedDate)) {\n        return null; // Si no es válida, devolvemos null\n    }\n\n    return parsedDate; // Devuelve el objeto Date válido\n\n}","import { createDialog } from '../components/dialog.js';\nimport { validateDate }from '../../logic/validateDate.js';\nimport { createTodoElement } from '../components/createIUTodoElement.js';\n\nclass IAddTodo {\n    constructor(projectController) {\n        this.projectController = projectController;\n        this.dialog = null;\n        this.currentProjectId = null;\n        this.currentProjectContainer = null;    \n        \n        // Bind methods to preserve 'this' context\n        this.handleAddTodoClick = this.handleAddTodoClick.bind(this);\n        this.handleAcceptClick = this.handleAcceptClick.bind(this);\n        this.handleCancelClick = this.handleCancelClick.bind(this);\n    }\n\n    // Método para inicializar los event listeners\n    initialize() {\n        this.attachEventListeners();\n    }\n\n    // Método central para manejar todos los eventos relacionados\n    attachEventListeners() {\n\n        document.addEventListener('click', (event) => {\n            if (event.target.classList.contains('add-todo')) {\n                this.handleAddTodoClick(event);\n            }\n        });\n\n        \n\n        \n    }\n\n\n    handleAddTodoClick(event) {\n\n        // Crear y mostrar el dialog\n        this.dialog = createDialog();\n        document.body.appendChild(this.dialog);\n\n        // Guardar referencias del proyecto actual\n\n        this.currentProjectId = event.target.parentElement.getAttribute('project-id');\n        this.currentProjectContainer = event.target.parentElement.querySelector('.todosContainer');\n        \n        // Configurar event listeners específicos del dialog\n        this.setupDialogEventListeners();\n        \n        // Mostrar el modal\n        this.dialog.showModal();\n\n    }\n\n\n    setupDialogEventListeners() {\n\n        const acceptButton = this.dialog.querySelector('.acceptButton');\n        const cancelButton = this.dialog.querySelector('.cancelButton');\n\n        acceptButton.addEventListener('click', this.handleAcceptClick);\n        cancelButton.addEventListener('click', this.handleCancelClick);\n        \n        // Event listener para cerrar con ESC\n        this.dialog.addEventListener('keydown', (event) => {\n            if (event.key === 'Escape') {\n                this.handleCancelClick();\n            }\n        });\n\n    }\n\n\n    handleAcceptClick(event) {\n\n        const todoData = this.extractData(event);\n        \n        if (todoData) {\n\n            // Usar el controlador para agregar el todo\n            let newTodo = this.projectController.addTodo(todoData, this.currentProjectId);\n\n            let todoId = newTodo.id;\n\n            // Actualizar la interfaz\n            this.refreshUI(todoData, todoId, this.currentProjectContainer);\n\n            // Limpiar y cerrar\n            this.resetAndClose();\n\n        } else {\n            this.showError('Please fill in all required fields');\n        }\n\n    }\n\n    handleCancelClick() {\n        this.resetAndClose();\n    }\n\n\n    extractData(event) {\n\n        event.preventDefault();\n\n        const form = this.dialog.querySelector('form');\n        const formData = new FormData(form);\n\n        const title = formData.get('title'); //string\n        const description = formData.get('description') || ''; //string\n\n        let dueDateString = formData.get('date'); //string\n        \n        const priority = formData.get('priority'); //Duvuelve un string con el texto seleccionado\n        const isCompleted = formData.get('checklist'); //Devuelve object o null\n\n        //Los datos que son necesarios validar (obligatorios) son: Titulo, prioridad, fecha. \n        //La descripcion y el checklist pueden estar vacios o por defecto\n\n        if (!title || !priority) {\n            return null;\n        };\n\n        // Validar fecha y obtener el objeto Date\n        const dueDate = validateDate(dueDateString);\n        if (!dueDate) {\n            return null;\n        }\n\n        return { title, description, dueDate, priority, isCompleted };\n\n    }\n\n\n    refreshUI(todoData, todoId, todosContainer) {\n\n        const todoElement = createTodoElement(todoData, todoId);\n        todosContainer.appendChild(todoElement);\n\n    }\n\n\n    resetAndClose() {\n\n        if (this.dialog) {\n            const form = this.dialog.querySelector('form');\n            if (form) form.reset();\n            \n            this.dialog.close();\n            this.dialog.remove();\n            this.dialog = null;\n        }\n        \n        // Limpiar referencias\n        this.currentProjectId = null;\n        this.currentProjectContainer = null;\n\n    }\n\n\n    showError(message) {\n\n        // Podrías implementar un sistema de notificaciones más sofisticado\n        alert(message);\n\n    }\n\n\n    // Método para limpiar event listeners si es necesario\n    destroy() {\n\n        if (this.dialog) {\n            this.dialog.remove();\n        }\n\n    }\n\n\n}\n\nexport { IAddTodo };","//Función encargada de crear y agregar el dialog para obtener los datos del usuario\n\nexport function createDialog() {\n\n    //Creo el elemento <dialog>\n    const dialog = document.createElement('dialog');\n\n    //Creo el título del dialogo <h2>\n    const h2 = document.createElement('h2');\n    h2.textContent = 'Add a new To-Do to this project';\n    dialog.appendChild(h2);\n    dialog.classList.add('dialogAddTodo');\n\n    //Creo el formulario que estará dentro del dialog\n    const form = document.createElement('form');\n    form.setAttribute('method', 'dialog');\n    dialog.appendChild(form);\n\n    //Creo el campo título del To-do a ingresar\n    const labelTitle = document.createElement('label');\n    labelTitle.textContent = 'To-do Title:';\n    labelTitle.setAttribute('for', 'title');\n    form.appendChild(labelTitle);\n\n    const inputTitle = document.createElement('input');\n    inputTitle.setAttribute('type', 'text');\n    inputTitle.setAttribute('id', 'title');\n    inputTitle.setAttribute('name', 'title');\n    inputTitle.required = true;\n    form.appendChild(inputTitle);\n\n\n    //Creo el campo descripción del To-do a ingresar\n    const descriptionLabel = document.createElement('label');\n    descriptionLabel.textContent = 'Add a description:';\n    descriptionLabel.setAttribute('for', 'description');\n    form.appendChild(descriptionLabel);\n\n    const descriptionTextArea = document.createElement('textarea');\n    descriptionTextArea.setAttribute('id', 'description');\n    descriptionTextArea.setAttribute('maxlength', '100');\n    descriptionTextArea.setAttribute('name', 'description');\n    descriptionTextArea.setAttribute('rows', '3');\n    form.appendChild(descriptionTextArea);\n\n    //Crear el campo fecha, luego modificarlo \n    const dateLabel = document.createElement('label');\n    dateLabel.textContent = 'Due date:';\n    dateLabel.setAttribute('for', 'date');\n    form.appendChild(dateLabel);\n\n    const inputDate = document.createElement('input');\n    inputDate.setAttribute('type', 'date');\n    inputDate.setAttribute('id', 'date');\n    inputDate.setAttribute('name', 'date');\n    inputDate.required = true;\n    form.appendChild(inputDate); \n\n\n    //Crear el elemento select con sus campos para prioridad\n\n    const labelPriority = document.createElement('label');\n    labelPriority.textContent = 'Select the priority:';\n    labelPriority.setAttribute('for', 'priority');\n    form.appendChild(labelPriority);\n\n    const selectPriority = document.createElement('select');\n    selectPriority.setAttribute('id', 'priority');\n    selectPriority.setAttribute('name', 'priority');\n    selectPriority.required = true;\n\n    const optionSelect = document.createElement('option');\n    optionSelect.textContent = 'Select an option';\n    optionSelect.value = '';\n    selectPriority.appendChild(optionSelect);\n\n    const optionHigh = document.createElement('option');\n    optionHigh.textContent = 'High priority';\n    optionHigh.setAttribute('value', 'high');\n    selectPriority.appendChild(optionHigh);\n\n    const optionMedium = document.createElement('option');\n    optionMedium.textContent = 'Medium priority';\n    optionMedium.setAttribute('value', 'medium');\n    selectPriority.appendChild(optionMedium);\n\n    const optionLow = document.createElement('option');\n    optionLow.textContent = 'Low priority';\n    optionLow.setAttribute('value', 'low');\n    selectPriority.appendChild(optionLow);\n\n    form.appendChild(selectPriority);\n\n    //Crear el campo para el checklist\n    \n    const checklistCheckbox = document.createElement('input');\n    checklistCheckbox.setAttribute('type', 'checkbox');\n    checklistCheckbox.setAttribute('id', 'checklist');\n    checklistCheckbox.setAttribute('name', 'checklist');\n    \n    const checklistLabel = document.createElement('label');\n    checklistLabel.setAttribute('for', 'checklist');\n    checklistLabel.textContent = 'Mark as completed';\n    \n    form.appendChild(checklistCheckbox);\n    form.appendChild(checklistLabel);\n\n\n    //Creacion de botones dentro del dialog\n    const acceptButton = document.createElement('button');\n    acceptButton.textContent = 'Accept';\n    acceptButton.classList.add('acceptButton')\n    form.appendChild(acceptButton);\n\n    const cancelButton = document.createElement('button');\n    cancelButton.textContent = 'Cancel';\n    cancelButton.classList.add('cancelButton');\n    form.appendChild(cancelButton);\n\n\n    return dialog\n\n}","class IDeleteTodo {\n\n    constructor(projectController) {\n\n        this.projectController = projectController;\n\n    }\n\n    initialize() {\n\n        this.attachEventListeners();\n\n    }\n\n    attachEventListeners() {\n\n        document.addEventListener('click', (event) => {\n\n            if (event.target.classList.contains('delete-todo')) {\n\n                this.handleDeleteTodoClick(event);\n\n            }\n\n        });\n    }   \n\n    handleDeleteTodoClick(event) {\n\n        //Se buscan y eliminan los objetos correspondientes a la interfaz clickeados. A través de sus ids.\n\n        console.log(event);\n        const todoItem = event.target.parentElement.parentElement;\n        const todosContainer = todoItem.parentElement;\n\n        const todoId = todoItem.getAttribute('todo-id');\n        const projectId = todosContainer.parentElement.getAttribute('project-id');\n\n        this.projectController.deleteTodo(todoId, projectId);\n\n        //Una vez eliminados los objetos, se elimina su interfaz correspondiente\n\n        todosContainer.removeChild(todoItem);\n\n    }\n\n}\n\nexport { IDeleteTodo };\n","import { createEditDialog } from '../components/createEditDialog.js';\nimport { validateDate } from '../../logic/validateDate.js';\nimport { createTodoElement } from '../components/createIUTodoElement.js';\n\n\nclass IEditTodo {\n\n    constructor(projectController) {\n\n        this.projectController = projectController;\n        this.dialog = null;\n        this.currentTodoItem = null;\n        this.currentTodoItemId = null;\n        this.currentProjectId = null;\n        this.currentProjectContainer = null;\n\n        // Bind methods to preserve 'this' context\n        this.handleEditClick = this.handleEditClick.bind(this);\n        this.handleCancelClick = this.handleCancelClick.bind(this);\n\n    }\n\n    initialize() {\n\n        this.attachEventListeners();\n        \n    }\n\n    attachEventListeners() {\n    \n        document.addEventListener('click', (event) => {\n\n            if (event.target.classList.contains('edit-todo')) {\n\n                this.handleEditTodoClick(event);\n\n            }\n\n        });\n\n    }\n\n\n    handleEditTodoClick(event) {\n\n        const todoItem = event.target.parentElement.parentElement;\n\t    const todosContainer = todoItem.parentElement;\n\n        const todoId = todoItem.getAttribute('todo-id');\n        const projectId = todosContainer.parentElement.getAttribute('project-id');\n        \n        this.currentTodoItem = todoItem;\n        this.currentTodoItemId = todoId;\n        this.currentProjectId = projectId;\n        this.currentProjectContainer = todosContainer;\n\n        this.dialog = createEditDialog();\n        document.body.appendChild(this.dialog);\n\n        // Configurar event listeners específicos del dialog\n        this.setupDialogEventListeners();\n        \n        // Mostrar el modal\n        this.dialog.showModal();\n\n    }\n\n\n    setupDialogEventListeners() {\n\n        const acceptButton = this.dialog.querySelector('.acceptButton');\n        const cancelButton = this.dialog.querySelector('.cancelButton');\n\n        acceptButton.addEventListener('click', this.handleEditClick);\n        cancelButton.addEventListener('click', this.handleCancelClick);\n        \n        // Event listener para cerrar con ESC\n        this.dialog.addEventListener('keydown', (event) => {\n            if (event.key === 'Escape') {\n                this.handleCancelClick();\n            }\n        });\n\n    }\n\n\n    extractEditData(event) {\n\n        event.preventDefault();\n\n        const form = this.dialog.querySelector('form');\n        const formData = new FormData(form);\n\n        const title = formData.get('title');\n        const description = formData.get('description') || '';\n\n        let dueDateString = formData.get('date');\n\n        const priority = formData.get('priority');\n\n        //Validaciones de los datos a editar ingresados\n\n        const dueDate = validateDate(dueDateString);\n\n        if (!title || !priority || !dueDate) {\n            return null;\n        };\n\n        return { title, description, dueDate, priority };\n\n    }\n\n\n    handleEditClick(event) {\n\n        const editTodoData = this.extractEditData(event);\n\n        //Sera verdadero si editTodoData no ha sido retornado como null en la llamada anterior, por lo tanto hay datos cargados válidos\n        if (editTodoData) {\n\n            //Delegar al controlador la actualización de los datos nuevos del todo clickeado\n            \n            let edittedTodo = this.projectController.editTodo(editTodoData, this.currentTodoItemId, this.currentProjectId);\n\n            this.currentTodoItem.remove();\n\n            this.refreshUI(edittedTodo, edittedTodo.id, this.currentProjectContainer);\n\n\n            //Limpiar form y cerrarlo\n            this.resetAndClose();\n        }\n\n        else {\n            this.showError('Pleas fill in all required fields');\n        }\n\n    }\n\n\n    refreshUI(todoData, todoId, todosContainer) {\n    \n        const todoElement = createTodoElement(todoData, todoId);\n        todosContainer.appendChild(todoElement);\n\n    }\n\n\n    handleCancelClick() {\n        this.resetAndClose();\n    }\n\n\n    resetAndClose() {\n\n        if (this.dialog) {\n            const form = this.dialog.querySelector('form');\n            if (form) form.reset();\n            \n            this.dialog.close();\n            this.dialog.remove();\n            this.dialog = null;\n        }\n        \n        // Limpiar referencias\n        this.currentTodoItem = null;\n        this.currentTodoItemId = null;\n        this.currentProjectId = null;\n        this.currentProjectContainer = null;\n        this.currentProjectId = null;\n\n    }\n\n\n    showError(message) {\n\n        // Podrías implementar un sistema de notificaciones más sofisticado\n        alert(message);\n\n    }\n\n\n    // Método para limpiar event listeners si es necesario\n    destroy() {\n\n        if (this.dialog) {\n            this.dialog.remove();\n        }\n\n    }\n\n}\n\n\n\nexport { IEditTodo };","export function createEditDialog() {\n\n    //Creo el elemento <dialog>\n    const dialog = document.createElement('dialog');\n\n    //Creo el título del dialogo <h2>\n    const h2 = document.createElement('h2');\n    h2.textContent = 'Edit this To-do';\n    dialog.appendChild(h2);\n    dialog.classList.add('dialogAddTodo');\n\n    //Creo el formulario que estará dentro del dialog\n    const form = document.createElement('form');\n    form.setAttribute('method', 'dialog');\n    dialog.appendChild(form);\n\n    //Creo el campo título del To-do a ingresar\n    const labelTitle = document.createElement('label');\n    labelTitle.textContent = 'New To-do Title:';\n    labelTitle.setAttribute('for', 'title');\n    form.appendChild(labelTitle);\n\n    const inputTitle = document.createElement('input');\n    inputTitle.setAttribute('type', 'text');\n    inputTitle.setAttribute('id', 'title');\n    inputTitle.setAttribute('name', 'title');\n    inputTitle.required = true;\n    form.appendChild(inputTitle);\n\n\n    //Creo el campo descripción del To-do a ingresar\n    const descriptionLabel = document.createElement('label');\n    descriptionLabel.textContent = 'Add a new description:';\n    descriptionLabel.setAttribute('for', 'description');\n    form.appendChild(descriptionLabel);\n\n    const descriptionTextArea = document.createElement('textarea');\n    descriptionTextArea.setAttribute('id', 'description');\n    descriptionTextArea.setAttribute('maxlength', '100');\n    descriptionTextArea.setAttribute('name', 'description');\n    descriptionTextArea.setAttribute('rows', '3');\n    form.appendChild(descriptionTextArea);\n\n    //Crear el campo fecha, luego modificarlo \n    const dateLabel = document.createElement('label');\n    dateLabel.textContent = 'Edit this Due date:';\n    dateLabel.setAttribute('for', 'date');\n    form.appendChild(dateLabel);\n\n    const inputDate = document.createElement('input');\n    inputDate.setAttribute('type', 'date');\n    inputDate.setAttribute('id', 'date');\n    inputDate.setAttribute('name', 'date');\n    inputDate.required = true;\n    form.appendChild(inputDate); \n\n\n    //Crear el elemento select con sus campos para prioridad\n\n    const labelPriority = document.createElement('label');\n    labelPriority.textContent = 'Select the new priority:';\n    labelPriority.setAttribute('for', 'priority');\n    form.appendChild(labelPriority);\n\n    const selectPriority = document.createElement('select');\n    selectPriority.setAttribute('id', 'priority');\n    selectPriority.setAttribute('name', 'priority');\n    selectPriority.required = true;\n\n    const optionSelect = document.createElement('option');\n    optionSelect.textContent = 'Select an option';\n    optionSelect.value = '';\n    selectPriority.appendChild(optionSelect);\n\n    const optionHigh = document.createElement('option');\n    optionHigh.textContent = 'High priority';\n    optionHigh.setAttribute('value', 'high');\n    selectPriority.appendChild(optionHigh);\n\n    const optionMedium = document.createElement('option');\n    optionMedium.textContent = 'Medium priority';\n    optionMedium.setAttribute('value', 'medium');\n    selectPriority.appendChild(optionMedium);\n\n    const optionLow = document.createElement('option');\n    optionLow.textContent = 'Low priority';\n    optionLow.setAttribute('value', 'low');\n    selectPriority.appendChild(optionLow);\n\n    form.appendChild(selectPriority);\n\n    //Creacion de botones dentro del dialog\n    const acceptButton = document.createElement('button');\n    acceptButton.textContent = 'Accept';\n    acceptButton.classList.add('acceptButton')\n    form.appendChild(acceptButton);\n\n    const cancelButton = document.createElement('button');\n    cancelButton.textContent = 'Cancel';\n    cancelButton.classList.add('cancelButton');\n    form.appendChild(cancelButton);\n\n\n    return dialog\n\n}","class ICompleteTodo {\n\n    constructor (projectController) {\n\n        this.projectController = projectController;\n\n    }\n\n    initialize() {\n\n        this.attachEventListeners();\n\n    }\n\n    attachEventListeners() {\n\n        document.addEventListener('click', (event) => {\n        \n            if (event.target.classList.contains('complete-todo')) {\n\n                this.handleCompleteTodoClick(event);\n\n            }\n\n        });\n    }\n\n\n    handleCompleteTodoClick(event) {\n\n        let string;\n\n        //Se buscan y eliminan los objetos correspondientes a la interfaz clickeados. A través de sus ids.\n\n        const todoItem = event.target.parentElement.parentElement;\n        const todosContainer = todoItem.parentElement;\n\n        const todoId = todoItem.getAttribute('todo-id');\n        const projectId = todosContainer.parentElement.getAttribute('project-id');\n\n        let checklistRes = this.projectController.completeTodo(todoId, projectId);\n\n        //AGREGAR LA ACTUALIZACION DE INTERFAZ DE ESTE TODO\n\n        checklistRes ? string = 'Completed: Yes' : string = 'Completed: No';\n\n        todoItem.querySelector('p.todo-status').textContent = string;\n\n    }\n\n}\n\nexport { ICompleteTodo };\n\n","import { IAddProject } from './IAddProject.js';\nimport { IAddTodo } from './IAddTodo.js';\nimport { IDeleteTodo } from './IDeleteTodo.js';\nimport { IEditTodo } from './IEditTodo.js';\nimport { ICompleteTodo } from './ICompleteTodo.js';\n\nclass IBoundary {\n\n    constructor(projectController) {\n\n        this.projectController = projectController;\n\n    }\n\n    initialize() {\n\n        const iAddProject = new IAddProject(this.projectController);\n        iAddProject.initialize();\n\n        const iAddTodo = new IAddTodo(this.projectController);\n        iAddTodo.initialize();\n\n        const iDeleteTodo = new IDeleteTodo(this.projectController);\n        iDeleteTodo.initialize();\n\n        const iEditTodo = new IEditTodo(this.projectController);\n        iEditTodo.initialize(); \n\n        const iCompleteTodo = new ICompleteTodo(this.projectController);\n        iCompleteTodo.initialize();\n\n    }\n\n}\n\nexport { IBoundary };","//Imports section\nimport { createFooter } from './modules/views/components/footer.js';\nimport { createLandingPage } from './modules/views/components/landing.js';\nimport { Controller } from './modules/controllers/controller.js';\nimport { IBoundary } from './modules/views/boundary/IBoundary.js';\n\nimport './styles/main.css';\n\nif (process.env.NODE_ENV !== 'production') {\n    console.log('Looks like we are in development mode!');\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Inicialización del DOM\n    initializeDOM();\n    \n    // Inicialización de controladores\n    const projectController = initializeControllers();\n\n    // Inicialización de boundary objects (interfaces de usuario)\n    initializeBoundaryObjects(projectController);\n    \n});\n\n\nfunction initializeDOM() {\n\n    const body = document.querySelector('body');\n    \n    // Agregar contenido de la landing page\n    const landingPage = createLandingPage();\n    body.appendChild(landingPage);\n    \n    // Agregar el contenido del footer\n    const footer = createFooter();\n    body.appendChild(footer);\n\n}\n\n\nfunction initializeControllers() {\n    \n    const gridContainer = document.querySelector('.gridContainer');\n    \n    // Crear el controlador del proyecto\n    const projectController = new Controller([]);\n    \n    // Inicializar con proyecto por defecto\n    projectController.initialize(gridContainer);\n    \n    return projectController ;\n\n}\n\n\nfunction initializeBoundaryObjects(projectController) {\n\n    const iBoundary = new IBoundary(projectController);\n    iBoundary.initialize()\n    \n}\n","import { createHero } from './hero.js';\nimport { createGrid } from './cardGrid.js';\n\nexport function createLandingPage() {\n\n    const hero = createHero();\n    const gridContainer = createGrid();\n\n    const container = document.createElement('main');\n    container.classList.add('landing-page');    \n\n    container.appendChild(hero);\n    container.appendChild(gridContainer);\n\n    return container;\n\n}","//Esta función se encarga de crear y exportar el hero de la landing page.\nimport '../../../styles/components/hero.css';\n\n\nexport function createHero() {\n\n    const hero = document.createElement('div');\n    hero.classList.add('hero');\n\n    const h1 = document.createElement('h1');\n    h1.textContent = 'Welcome to the To-Do List';\n\n    const button = document.createElement('button');\n    button.textContent = 'Create a new project';\n    button.classList.add('buttonAddNewProject');\n\n\n    hero.appendChild(h1);\n    hero.appendChild(button);\n\n    return hero;\n\n}","export function createGrid() {\n\n    const gridContainer = document.createElement('div');\n    gridContainer.classList.add('gridContainer');\n\n    return gridContainer\n\n}","import '../../../styles/components/footer.css';\n\nexport function createFooter() {\n\n    const footer = document.createElement('footer');\n\n    const p = document.createElement('p');\n    p.textContent = 'This page was made by: Rodrigol \\n © All rights reserved';\n\n    footer.appendChild(p);\n\n    return footer;\n\n}"],"names":["Todo","constructor","title","description","dueDate","priority","checklist","this","toggleChecklistState","editTodo","newData","Project","name","todosList","addTodo","todoData","uuid","self","crypto","randomUUID","newTodo","isCompleted","id","push","deleteTodo","todoId","selectedTodoIndex","findIndex","todo","splice","completeTodo","find","editTodoData","StorageManager","PROJECTS_KEY","saveProjects","projects","projectsJSON","JSON","stringify","localStorage","setItem","console","log","error","loadProjects","getItem","parse","clearProjects","removeItem","hasStoredProjects","getStorageInfo","hasData","dataSize","length","projectCount","createIUProject","project","projectDiv","document","createElement","classList","add","setAttribute","projectName","textContent","todosContainer","button","appendChild","createTodoElement","todoDiv","className","dateString","date","Date","isNaN","getTime","toLocaleDateString","year","month","day","e","formatDate","dataset","toLowerCase","status","statusText","completed","actionsDiv","deleteBtn","completeBtn","editBtn","setTimeout","remove","Controller","storageManager","initialize","gridContainer","loadProjectsFromStorage","iuNewProject","createProject","storedProjectsData","forEach","projectData","iuProject","querySelector","todoElement","saveProjectsToStorage","warn","newProject","projectUUID","projectId","selectedProject","checklistRes","res","getProject","clearAllData","IAddProject","projectController","dialog","handleAddProjectClick","bind","handleAcceptClick","handleCancelClick","attachEventListeners","addEventListener","event","target","contains","h2","form","labelName","inputName","required","acceptButton","cancelButton","createProjectDialog","body","setupDialogEventListeners","showModal","key","value","newProjectIU","alert","resetAndClose","reset","close","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","test","object","Object","prototype","hasOwnProperty","call","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","count","result","tokenValue","replace","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","dateLongFormatter","pattern","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","subject","message","includes","RangeError","Math","pow","millisecondsInWeek","constructFromSymbol","Symbol","for","constructFrom","defaultOptions","getDefaultOptions","toDate","argument","Setter","subPriority","validate","_utcDate","ValueSetter","validateValue","setValue","super","set","flags","DateTimezoneSetter","reference","timestampIsSet","date_","isConstructor","setFullYear","getFullYear","getMonth","getDate","setHours","getHours","getMinutes","getSeconds","getMilliseconds","transpose","Parser","run","setter","_value","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","trunc","isLeapYearIndex","startOfWeek","locale","in","getDay","diff","setDate","getWeekYear","firstWeekOfNextYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","startOfISOWeek","getWeek","firstWeek","startOfWeekYear","round","startOfISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","getISOWeekYear","fourthOfJanuary","setISOWeek","week","getISOWeek","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","NaN","setDay","currentDay","delta","setISODay","getISODay","getTimezoneOffsetInMilliseconds","utcDate","UTC","setUTCFullYear","parsers","G","incompatibleTokens","y","isTwoDigitYear","unit","normalizedTwoDigitYear","Y","R","_flags","firstWeekOfYear","u","Q","setMonth","q","M","L","w","setWeek","I","d","isLeapYear","D","subpriority","E","wholeWeekDays","floor","c","i","a","b","B","h","isPM","H","K","k","hours","m","setMinutes","s","setSeconds","S","setMilliseconds","X","x","t","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dateStr","formatStr","referenceDate","invalidDate","assign","subFnOptions","setters","tokens","map","substring","firstCharacter","longFormatter","join","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","incompatibleToken","usedToken","fullToken","indexOf","uniquePrioritySetters","sort","filter","setterArray","isValid","validateDate","trim","parsedDate","IAddTodo","currentProjectId","currentProjectContainer","handleAddTodoClick","labelTitle","inputTitle","descriptionLabel","descriptionTextArea","dateLabel","inputDate","labelPriority","selectPriority","optionSelect","optionHigh","optionMedium","optionLow","checklistCheckbox","checklistLabel","createDialog","parentElement","getAttribute","extractData","refreshUI","showError","preventDefault","formData","FormData","get","dueDateString","destroy","IDeleteTodo","handleDeleteTodoClick","todoItem","removeChild","IEditTodo","currentTodoItem","currentTodoItemId","handleEditClick","handleEditTodoClick","createEditDialog","extractEditData","edittedTodo","ICompleteTodo","handleCompleteTodoClick","IBoundary","landingPage","hero","h1","createHero","createGrid","container","createLandingPage","footer","createFooter","initializeDOM","initializeControllers"],"sourceRoot":""}